# Copyright (C) 2014 Dell, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

########## General Notes
# 
# This config file is used by the Doradus server at startup. Most of these configuration parameters
# can be overridden via command-line options by placing a dash before the parameter name (e.g.,
# "-dbport 9876"). The following rules apply to this yaml file:
#
#   1) Comments begin with a # just like this line.
#   2) Outer-most parameters should start in column 1 with no dash.
#   3) Most parameters use the format <name>: <value>. But some parameters have subparameters.
#   4) An empty value consists of a pair of quotes. (e.g., sstable_compression: "").
#   5) Child parameters, when used, must begin on a new line with one or more leading spaces, then
#      a dash, then a space, then the parameter name and value.
#

########## Multi-tenant options
#
# These parameters control the multi-tenant features of Doradus.
#

# multitenant_mode: When this option is false, Doradus operates in single-tenant mode. All
# applications and created and managed in the default tenant, whose name is defined by the
# "keyspace" parameter. When multitenant_mode is true, most requests must identify a specific
# tenant and provide credentials for that tenant. Non-tenant commands (system commands) do not
# specify a tenant and must be validated using system credentials. Note that multi-tenant mode
# requires the use of CQL, hence "use_cql" must be true. Default: false
multitenant_mode: false

# disable_default_keyspace: When multitenant_mode is true, non-system commands that do not identify
# a specific tenant are sent to the default tenant (see "keyspace" parameter). Requests to the
# default tenant do not require credentials, hence it acts like a public "sandbox". The use of the
# default tenant in multi-tenant mode can be disabled by setting this parameter to true. Default:
# false.
disable_default_keyspace: false

########## Doradus Service Parameters
# 
# default_services: Defines the internal Doradus services that will be started. These are in
# addition to storage_services, which are defined separately. DBService and SchemaService are
# required and will always be started even if not listed here. Other services are optional and can
# be disabled when not needed. Custom services can be also be added to this list. Note that the
# default_services parameter is only used by Doradus in stand-alone mode. When Doradus is started
# as an embedded application, all services (include storage services) must be passed to the
# startEmbedded() method. Each line must contain the full package name of the service class. The
# optional services are:
#
#   com.dell.doradus.mbeans.MBeanService
#
#       Provides monitoring and management services via custom Doradus MBeans. Can be disabled if
#       custom JMX commands are not needed.
#
#   com.dell.doradus.service.rest.RESTService
#
#       Provides the REST API via an embedded Jetty server, which listens to the server and port
#       defined by restaddr and restport. It only makes sense to disable this when running Doradus
#       as an embedded service.
#
#   com.dell.doradus.service.taskmanager.TaskManagerService
#
#       Provides background task management for data aging. Can be disabled if background tasks are
#       not needed for this Doradus instance.
#
default_services:
    - com.dell.doradus.mbeans.MBeanService
    - com.dell.doradus.service.db.DBService
    - com.dell.doradus.service.rest.RESTService
    - com.dell.doradus.service.schema.SchemaService
    - com.dell.doradus.service.taskmanager.TaskManagerService

# storage_services: This parameter defines which storage service modules are started and therefore
# available to applications. Most Doradus instances will use a single storage service, although
# multiple services can be used. If multiple storage services are listed, the first one becomes the
# default for new applications that don't explicitly set a StorageService option. Two storage
# services are currently available:
#
#   com.dell.doradus.service.olap.OLAPService
#   com.dell.doradus.service.spider.SpiderService
#
# See the Doradus documentation for the features provided by each storage service.
#
storage_services:
    - com.dell.doradus.service.spider.SpiderService
    - com.dell.doradus.service.olap.OLAPService
    - com.dell.doradus.logservice.LoggingService
    
# load_webserver:  When load_webserver is false, the webserver will be not loaded with Doradus server.
# when it is true, webserver_class option needs to be defined with the full package name of the WebServer class
load_webserver: true
webserver_class: com.dell.doradus.server.JettyWebServer

########## Cassandra Keyspace Parameters
#
# These parameters are used for Cassandra Keyspaces created by Doradus. Each application is assigned
# an explicit or default "tenant", which is mapped to a keyspace. These parameters are used when the
# keyspace is first created. After creation, keyspace options can be modified via Cassandra-level
# tools. 
#

# keyspace: Name of the keyspace for the default tenant. This keyspace is used for all applications
# in single-tenant mode and for tenant-inspecific applications (if allowed) in multi-tenant mode.
# Default: 'Doradus'.
keyspace: 'Doradus'

# ks_defaults: Keyspace options whenever a new Keyspace is created. See Cassandra documentation for
# details on keyspace parameters.
ks_defaults:
    - strategy_class: SimpleStrategy
    - strategy_options:
        - replication_factor: "1"   # enclose this value in quotes
    - durable_writes: true
    
########## Cassandra ColumnFamily Parameters
#
# These options are used when new Cassandra ColumnFamilies are created. They are only used when a
# a new CF is created: existing CFs are not modified if these options are changed after they are
# created.

# cf_defaults: See Cassandra and Doradus Administration documentation for recommendations on these
# options.
cf_defaults:
    - compression_options:
        - sstable_compression: ""   # use empty string for "none"
    - gc_grace_seconds: 3600

########## Cassandra Connection Parameters
#
# These parameters affect the Cassandra database node(s) to which Doradus connects.
#

# dbhost: The host name(s) or address(es) of the Cassandra node(s) to connect to. Static IP
# addresses are preferred over host names. If a comma-separated list of hosts is provided, one of
# the servers must be available before Doradus will initialize. With the Thrift API, only the nodes
# listed here are used. With the CQL API, all nodes in the cluster are automatically used on a
# round-robin basis. Default: 'localhost'.
dbhost: localhost

# secondary_dbhost: When the Thrift API is used, this is a comma-separated list of secondary hosts
# that can be used if all primary hosts are unreachable. Under normal conditions, dbhost should
# define "network near" Cassandra nodes, and connections are rotated through those nodes. But one or
# more secondary nodes can be given in secondary_dbhost as a fallback. As new connections are used,
# Doradus periodically checks to see if any primary nodes are available and automatically switches
# back to them when possible. Default: null (unused).
# secondary_dbhost: 

# use_cql: If this is false, the Thrift API is used for communicating with Cassandra. If true the
# CQL API is used. Note that Thrift and CQL use different port numbers (see dbport below).
# Default: true
use_cql: false

# dbport: The port number to use for Cassandra database connections. It must be the same on all
# nodes listed in "dbhost". For Thrift, the default port normally 9160; for CQL, it is 9042.
# Default: 9042.
dbport: 9160
#dbport: 9042

# jmxport: The JMX port of the Cassandra database. It must be the same on all nodes. Note that JMX
# can be configured via runtime options to require authentication and/or TLS/SSL. Default: 7199.
jmxport: 7199

# db_timeout_millis: Database timeout in milliseconds. This time is used both when connecting to
# Cassandra and when performing read/write operations. Default: 10 seconds.
# db_timeout_millis: 10000

# db_connect_retry_wait_millis: Database initial connection retry wait in milliseconds. If the
# initial connection to Cassandra times-out (see db_timeout_millis), Doradus waits this amount of
# time before trying again. Doradus keeps retrying indefinitely under the assumption that Cassandra
# may take a while to start. Default: 5 seconds.
# db_connect_retry_wait_millis: 5000

# max_commit_attempts: Maximum number of times Doradus attempts an update (batch_mutate or row
# remove) call to Cassandra. If an update fails, Doradus waits a while (see retry_wait_millis) and
# tries again, up to this limit. Default: 10.
# max_commit_attempts: 10

# max_read_attempts: Maximum number of times Doradus attempts a read (e.g., get_range_slices) call
# to Cassandra. If a read request fails, Doradus waits a bit (see retry_wait_millis) and tries the
# read again, up to this limit. Default: 3.
max_read_attempts: 7

# max_reconnect_attempts: Maximum number of times Doradus attempts to reconnect to Cassandra after
# a failure. A reconnect is performed if a read or update call fails with an exception that suggests
# that the Cassandra node may be down, not just busy. With each failed reconnect attempt, Doradus
# waits a bit (see retry_wait_millis) and retries, up to this limit. Default: 3.
# max_reconnect_attempts: 3

# retry_wait_millis: The time in milliseconds that Doradus waits after a failed update, read, or
# reconnect request call to Cassandra. This time is multiplied by the attempt #, so Doradus waits a
# little longer with each successive failed call. Default: 5 seconds. See also max_commit_attempts,
# max_read_attempts, and max_reconnect_attempts.
# retry_wait_millis: 5000

# dbtls: Set to true to use TLS/SSL for connections to Cassandra. This option works for both CQL
# and Thrift. When dbtls is enabled, the options keystore and keystorepassword are used for
# certificate information. Default: false.
dbtls: false

# dbtls_cipher_suites: Set to a list of one or more cipher suites to be used with SSL/TLS to
# Cassandra. This option is only meaningful if dbtls is set to true. Cassandra must be configured
# to allow at least one of the same cipher algorithems in order to establish a successful
# connection. The list can be comma-separated on a single line within square brackets (e.g.,
# [X, Y, Z]), or each cipher suite can be listed on its own line, indented and prefixed with a "-".
# The cipher suite TLS_RSA_WITH_AES_128_CBC_SHA is generally always allowed by Cassandra.
dbtls_cipher_suites: [TLS_RSA_WITH_AES_128_CBC_SHA]

# dbuser/dbpassword: If authentication/authorization is configured for Cassandra, these parameters
# must be set to a super user that Doradus can use. When Cassandra's authenticator is set to
# PasswordAuthorizer, it initially creates the super id/password cassandra/cassandra. A better
# password and/or a different super user should be created for Doradus. Remember that these values
# can be passed-in dynamically as run-time arguments. 
dbuser: cassandra
dbpassword: cassandra

# thrift_buffer_size_mb: This value sizes the read buffer used for the Thrift API. Increase this
# value is you see error messages in the Doradus log file such as:
#       Frame size (xxx) larger than max length (yyy)!
# The default value is 16 (16777216 bytes).
thrift_buffer_size_mb: 16


########## Doradus REST API Parameters
#
# These parameters affect the Doradus REST API.
#

# restaddr: The IP address to which Doradus binds and listens for REST connections. Default is
# '0.0.0.0' which means "any address".
# restaddr: 0.0.0.0

# restport: The port number to which Doradus binds and listens for REST connections. Default is
# 1123.
restport: 1123

# maxconns: The maximum number of simultaneous REST connections allowed. If additional connections
# above this limit is received, they are accepted but queued and don't receive service until another
# connection is closed. Default is 200.
maxconns: 200

# tls: If true it will create the REST connection as a TLS/SSL server. Default is false.
# tls: true

# tls_cipher_suites: If TLS/SSL is enabled, this parameter defines which cipher suites the server
# offers to clients. This is an "include" (or "white") list, which means only these algorithms are
# offered. Only cipher suites available to the JVM are actually offered to clients. The list below
# is the recommended cipher suite for FIPS compliance. See:
#    http://www-archive.mozilla.org/projects/security/pki/nss/ssl/fips-ssl-ciphersuites.html
tls_cipher_suites:
   - TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
   - TLS_DHE_DSS_WITH_AES_128_CBC_SHA
   - TLS_DHE_DSS_WITH_AES_256_CBC_SHA
   - TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
   - TLS_DHE_RSA_WITH_AES_128_CBC_SHA
   - TLS_DHE_RSA_WITH_AES_256_CBC_SHA
   - TLS_RSA_WITH_3DES_EDE_CBC_SHA
   - TLS_RSA_WITH_AES_128_CBC_SHA
   - TLS_RSA_WITH_AES_256_CBC_SHA
   - TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
   - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
   - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
   - TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
   - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
   - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
   - TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
   - TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
   - TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
   - TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
   - TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
   - TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
   
# clientauthentication: If true mutual client/server authentication is required. Default is false.
# clientauthentication: false

# keystore: Defines the path of the keystore file that contains the private SSL certificate. This
# certificate is used both Cassandra communication (dbtls: true) and the REST API (tls: true).
# Default is system setting.
# keystore: config/keystore

# keystorepassword: Defines the password used to protect the keystore file. Default is system
# setting.
# keystorepassword: changeit

# truststore: Defines the path name of the truststore file that holds trusted client certificates,
# which is used when both 'tls' and 'clientauthentication' are both true. Default is system setting.
# truststore: config/truststore

# truststorepassword: Defines the password that protects the truststore file. Default is system
# setting.
# truststorepassword: password

# max_request_size: Defines the maximum size of an input entity (message) that will be accepted in
# requests. If a request has a content-length larger than this, the request is rejected and the
# socket is closed. Default is 50MB.
# max_request_size: 52428800

########## Doradus Query Parameters
#
# These parameters affect the operation of Doradus query execution.
#

# aggr_separate_search: <flag>
# Define separate search flag for aggregates
# Default flag is false
aggr_separate_search: false

# aggr_concurrent_threads: <#>
# Define number of concurrent threads for aggregates
# Default is 8
aggr_concurrent_threads: 0

# dbesoptions_entityBuffer: <#>
# number of entities being pre-fetched with scalar values
# Default is 1000
dbesoptions_entityBuffer: 1000

# dbesoptions_linkBuffer: <#>
# number of pre-fetched references of the same link field for one entity if the current buffer is empty
# Default is 1000
dbesoptions_linkBuffer: 1000

# dbesoptions_initialLinkBuffer: <#>
# number of pre-fetched references of the same link field for every cached entity when the link values asked for one entity
# Default is 10
dbesoptions_initialLinkBuffer: 10

# dbesoptions_initialLinkBufferDimension: <#>
# number of entities the initial links will be pre-fetched for
# Default is 1000
dbesoptions_initialLinkBufferDimension: 1000

# dbesoptions_initialScalarBuffer: <#>
# number of pre-fetched scalar values for every cached entity when all scalar fields are requested
# Default is 30
dbesoptions_initialScalarBuffer: 30

# search_default_page_size: Default query page size (used when s=... parameter is missing
# in _query request). Default: 100
search_default_page_size: 100

# l2r_enable: Enable left-to-right algorithm. If set to false, old algorithm is applied. Default is
# true.
l2r_enable: true


########## OLAP Parameters
#
# These parameters control the operation of the OLAP Service.
#

# olap_cache_size_mb: size, in megabytes, allowed for cache of most-recently-used fields simultaneously
# loaded into RAM. If it is exceeded, older fields will be un-loaded from memory. Default is 100
olap_cache_size_mb: 1000

# olap_query_cache_size_mb: size, in megabytes, of the cached search results. Each cached result
# takes 1 bit per each document in the table. 0 means no caching. Default is 100.
olap_query_cache_size_mb: 100

# olap_store_cache_size_mb: size, in megabytes, of the cached raw OLAP data, such as values of text
# field. It does not affect shards loaded in memory. 0 means they are not cached (default).
olap_file_cache_size_mb: 0

# Number of threads to use by shard merging algorithm. 0 means merging is single-threaded.
olap_merge_threads: 0
# Number of threads to use for compression. 0 means it is single-threaded.   
olap_compression_threads: 0
# Number of threads to use for search and aggregation. 0 means it is single-threaded.   
olap_search_threads: 0

# Level of GZip-compression in OLAP. 0 means no compression, 9 means best compression
# default is -1 (level 6). Tests suggest levels 2, 4, and 6(default) being a good choice.  
olap_compression_level: -1


# olap_cf_defaults: Options used to create the OLAP ColumnFamily. This CF is only created when the
# server is first started for a new database. If these options are changed, an existing OLAP CF is
# not modified to match. See Cassandra and Doradus Administration documentation for details about
# these options.
olap_cf_defaults:
    - compression_options:
        - sstable_compression:  "" # use empty string for "none"
    - gc_grace_seconds: 3600


########## Doradus Spider Parameters
#
# These parameters affect the operation of the Spider Service.
#

# batch_mutation_threshold: Defines the maximum number of mutations a batch update will queue
# before flushing to the database. After the mutation are generated for each object in a batch
# update, Spider checks to see if this threshold has been met and flushes the current mutation
# batch if it has. Larger values improve performance by reducing Cassandra round trips, but they
# require larger API buffer sizes. The default is 10,000.
batch_mutation_threshold: 10000
