function FileData_Pairs(x)
{
x.t("root","folder");
x.t("below","multiple");
x.t("below","saved_caches_directory");
x.t("available","space");
x.t("files","cassandra");
x.t("files","stored");
x.t("files","allows");
x.t("files","sometimes");
x.t("files","hold");
x.t("files","disk");
x.t("files","setting");
x.t("files","containing");
x.t("files","commit");
x.t("files","including");
x.t("files","even");
x.t("files","replayed");
x.t("files","sstable");
x.t("saved","caches");
x.t("indented","beginning");
x.t("flushed","disk");
x.t("flushed","quickly");
x.t("installed","shouldn\u2019t");
x.t("kinds","files");
x.t("kinds","data");
x.t("obsolete","typically");
x.t("key","row");
x.t("creates","three");
x.t("builds","disk");
x.t("locations","cassandra");
x.t("locations","setting");
x.t("line","indented");
x.t("cache","option");
x.t("hash","index");
x.t("change","following");
x.t("providing","recovery");
x.t("best","practices");
x.t("lot","space");
x.t("hence","disk");
x.t("fairly","quickly");
x.t("multiple","files");
x.t("multiple","data");
x.t("multiple","commit");
x.t("rate","commit");
x.t("require","lot");
x.t("listed","secondary");
x.t("needed","typically");
x.t("updates","written");
x.t("updates","may");
x.t("updates","sent");
x.t("size","disk");
x.t("size","used");
x.t("grow","rate");
x.t("cassandra","creates");
x.t("cassandra","configured");
x.t("cassandra","first");
x.t("cassandra","configuration");
x.t("cassandra","data");
x.t("cassandra","save");
x.t("file","locations");
x.t("file","directories");
x.t("file","kind");
x.t("file","commit");
x.t("reside","disk");
x.t("reside","separate");
x.t("confusingly","sstable");
x.t("beginning","dash");
x.t("saved_caches_directory","/var/lib/cassandra/saved_caches");
x.t("flushes","sstable");
x.t("practices","commit");
x.t("/var/lib/cassandra/commitlog","option");
x.t("become","obsolete");
x.t("recommended","better");
x.t("large","commit");
x.t("dash","multiple");
x.t("high","volume");
x.t("operation","cassandra");
x.t("path","file");
x.t("stored","different");
x.t("stored","sstables");
x.t("stored","memory");
x.t("/var/lib/cassandra/saved_caches","option");
x.t("name","cassandra");
x.t("settings","updates");
x.t("performance","below");
x.t("secondary","line");
x.t("restart","occurs");
x.t("directories","flushes");
x.t("allows","concurrent");
x.t("allows","disks");
x.t("caches","builds");
x.t("caches","somewhat");
x.t("caches","depend");
x.t("thereby","providing");
x.t("concurrent","i/os");
x.t("three","kinds");
x.t("solely","sstables");
x.t("contention","files");
x.t("contention","sstable");
x.t("sometimes","called");
x.t("configured","multiple");
x.t("hold","data");
x.t("disk","size");
x.t("disk","large");
x.t("disk","allows");
x.t("disk","contention");
x.t("disk","space");
x.t("disk","sstables");
x.t("disk","data");
x.t("disk","prevent");
x.t("disk","commit");
x.t("disk","sstable");
x.t("occurs","thereby");
x.t("discarded","fairly");
x.t("somewhat","confusingly");
x.t("options","commitlog_directory");
x.t("space","updates");
x.t("space","caches");
x.t("space","data_file_directories");
x.t("space","therefore");
x.t("depend","cache");
x.t("first","written");
x.t("written","commit");
x.t("written","sstable");
x.t("better","performance");
x.t("different","disk");
x.t("software","installed");
x.t("recovery","updates");
x.t("may","written");
x.t("receive","high");
x.t("row","caches");
x.t("index","files");
x.t("data_file_directories","/var/lib/cassandra/data");
x.t("directory","available");
x.t("folder","listed");
x.t("folder","reside");
x.t("folder","path");
x.t("folder","name");
x.t("folder","options");
x.t("folder","receive");
x.t("folder","deleted");
x.t("folder","commit");
x.t("folder","sstable");
x.t("primary","files");
x.t("logs","require");
x.t("logs","stored");
x.t("logs","discarded");
x.t("logs","sstables");
x.t("logs","created");
x.t("logs","removed");
x.t("sstables","saved");
x.t("sstables","primary");
x.t("sstables","prevents");
x.t("sstables","sstable");
x.t("option","settings");
x.t("option","folder");
x.t("option","least");
x.t("option","valid");
x.t("least","root");
x.t("memory","eventually");
x.t("sorted","flushed");
x.t("kind","defined");
x.t("shouldn\u2019t","sstable");
x.t("quickly","received");
x.t("longer","needed");
x.t("configuration","files");
x.t("configuration","operation");
x.t("represented","multiple");
x.t("disks","below");
x.t("disks","size");
x.t("disks","grow");
x.t("/var/lib/cassandra/data","option");
x.t("commitlog_directory","/var/lib/cassandra/commitlog");
x.t("valid","folder");
x.t("separate","disk");
x.t("separate","i/o");
x.t("data","files");
x.t("data","flushed");
x.t("data","hash");
x.t("data","file");
x.t("data","folder");
x.t("data","folders");
x.t("defined","cassandra.yaml");
x.t("save","key");
x.t("received","commit");
x.t("application","data");
x.t("prevent","contention");
x.t("called","data");
x.t("eventually","sorted");
x.t("typically","disk");
x.t("typically","commit");
x.t("prevents","disk");
x.t("created","folder");
x.t("cassandra.yaml","change");
x.t("following","folder");
x.t("used","solely");
x.t("setting","cassandra");
x.t("containing","application");
x.t("i/os","separate");
x.t("deleted","become");
x.t("folders","recommended");
x.t("i/o","hence");
x.t("i/o","initiated");
x.t("initiated","disk");
x.t("therefore","best");
x.t("volume","i/o");
x.t("commit","files");
x.t("commit","logs");
x.t("commit","log");
x.t("including","data");
x.t("sstable","files");
x.t("sstable","file");
x.t("sstable","disk");
x.t("sstable","directory");
x.t("sstable","folder");
x.t("sstable","represented");
x.t("sstable","disks");
x.t("even","three");
x.t("log","file");
x.t("log","stored");
x.t("log","software");
x.t("log","folder");
x.t("log","sstable");
x.t("sent","cassandra");
x.t("replayed","restart");
x.t("removed","longer");
}
