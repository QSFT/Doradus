function FileData_Pairs(x)
{
x.t("statements","cql");
x.t("passed-in","dynamically");
x.t("parameter","configures");
x.t("keystorepassword","used");
x.t("advantages","prepared");
x.t("files","configuration");
x.t("preferred","host");
x.t("within","time");
x.t("within","square");
x.t("30000","cassandra");
x.t("dbtls_cipher_suites","[tls_rsa_with_aes_128_cbc_sha]");
x.t("indented","prefixed");
x.t("static","addresses");
x.t("failover","dbport");
x.t("instance","doradus");
x.t("always","allowed");
x.t("keystore","keystorepassword");
x.t("enabled","cassandra");
x.t("enabled","options");
x.t("prepared","statements");
x.t("tls_rsa_with_aes_128_cbc_sha","generally");
x.t("user","doradus");
x.t("user","created");
x.t("creates","super");
x.t("uses","thrift");
x.t("uses","cql");
x.t("line","within");
x.t("line","indented");
x.t("thrift","api");
x.t("thrift","dbtls");
x.t("thrift","cql");
x.t("provided","doradus");
x.t("change","value");
x.t("retry","wait");
x.t("retry","initiated");
x.t("times","doradus");
x.t("phased-out","dbtls");
x.t("time","thrift");
x.t("time","connection");
x.t("time","multiplied");
x.t("time","trying");
x.t("time","cql");
x.t("time","milliseconds");
x.t("time","used");
x.t("initially","creates");
x.t("connection","retry");
x.t("connection","cassandra");
x.t("connection","list");
x.t("connection","closed");
x.t("connection","parameters");
x.t("connection","timeout");
x.t("however","cassandra");
x.t("tls/ssl","connections");
x.t("apis","time");
x.t("apis","initial");
x.t("apis","dbhost");
x.t("db_connect_retry_wait_millis","30000");
x.t("reconnect","cassandra");
x.t("reconnect","request");
x.t("reconnect","performed");
x.t("multiplied","attempt");
x.t("default","doradus");
x.t("default","9042");
x.t("listed","line");
x.t("doradus","uses");
x.t("doradus","remember");
x.t("doradus","connects");
x.t("doradus","attempt");
x.t("doradus","cassandra's");
x.t("doradus","database");
x.t("doradus","configuration");
x.t("doradus","keeps");
x.t("doradus","connect");
x.t("doradus","waits");
x.t("doradus","server");
x.t("start","max_commit_attempts");
x.t("new","databases");
x.t("bulk","data");
x.t("single","line");
x.t("doradus.yaml","cassandra");
x.t("doradus.yaml","file");
x.t("cassandra","instance");
x.t("cassandra","thrift");
x.t("cassandra","time");
x.t("cassandra","connection");
x.t("cassandra","cassandra");
x.t("cassandra","dbpassword");
x.t("cassandra","api");
x.t("cassandra","authentication/authorization");
x.t("cassandra","parameters");
x.t("cassandra","configured");
x.t("cassandra","better");
x.t("cassandra","may");
x.t("cassandra","node");
x.t("cassandra","database");
x.t("cassandra","performing");
x.t("cassandra","option");
x.t("cassandra","failure");
x.t("cassandra","port");
x.t("cassandra","rpc");
x.t("cassandra","times-out");
x.t("cassandra","dbuser");
x.t("cassandra","update");
x.t("list","cipher");
x.t("list","hosts");
x.t("list","comma-separated");
x.t("fashion","allowing");
x.t("again","doradus");
x.t("indefinitely","assumption");
x.t("use_cql","false");
x.t("file","option");
x.t("5000","time");
x.t("dbpassword","cassandra");
x.t("api","time");
x.t("api","new");
x.t("api","communicate");
x.t("api","may");
x.t("api","instead");
x.t("api","little");
x.t("api","port");
x.t("api\u2019s","port");
x.t("due","advantages");
x.t("meaningful","dbtls");
x.t("jmx","port");
x.t("fails","retry_wait_millis");
x.t("false","default");
x.t("false","true");
x.t("recommended","cassandra");
x.t("remember","values");
x.t("defaults","seconds");
x.t("true","uses");
x.t("true","tls/ssl");
x.t("true","cassandra");
x.t("true","additionally");
x.t("via","cassandra.yaml");
x.t("authentication/authorization","configured");
x.t("operation","doradus");
x.t("operation","retry_wait_millis");
x.t("operation","aborting");
x.t("name","(s)");
x.t("wait","milliseconds");
x.t("connects","via");
x.t("faster","bulk");
x.t("faster","due");
x.t("run-time","arguments");
x.t("addresses","preferred");
x.t("60000","socket-level");
x.t("closed","retry");
x.t("perform","cassandra");
x.t("perform","read");
x.t("v2.1","prior");
x.t("tests","show");
x.t("brackets","e.g");
x.t("parameters","doradus");
x.t("parameters","doradus.yaml");
x.t("parameters","cassandra");
x.t("parameters","parameters");
x.t("parameters","control");
x.t("parameters","super");
x.t("jmxport","7199");
x.t("prior","release");
x.t("v2.2","release");
x.t("trying","again");
x.t("continue","thrift");
x.t("suites","used");
x.t("address","(es)");
x.t("loading","time");
x.t("write","request");
x.t("write","operations");
x.t("attempt","reconnect");
x.t("attempt","perform");
x.t("attempt","number");
x.t("9042","note");
x.t("certificate","information");
x.t("cipher","suites");
x.t("cipher","algorithms");
x.t("cipher","suite");
x.t("allow","least");
x.t("prefixed","cipher");
x.t("start_native_transport","true");
x.t("ssl/tls","cassandra");
x.t("localhost","parameter");
x.t("allowing","load");
x.t("request","received");
x.t("request","call");
x.t("failed","call");
x.t("failed","update");
x.t("successive","failed");
x.t("something","7199");
x.t("something","9160");
x.t("configured","cassandra");
x.t("configured","allow");
x.t("max_commit_attempts","maximum");
x.t("max_commit_attempts","max_read_attempts");
x.t("id/password","cassandra");
x.t("cassandra\u2019s","jmx");
x.t("cassandra\u2019s","value");
x.t("cassandra\u2019s","port");
x.t("connecting","cassandra");
x.t("means","doradus");
x.t("means","read");
x.t("databases","created");
x.t("options","keystore");
x.t("allowed","cassandra");
x.t("control","connections");
x.t("number","change");
x.t("number","times");
x.t("number","means");
x.t("communicate","cassandra");
x.t("dbtls","enabled");
x.t("dbtls","false");
x.t("dbtls","true");
x.t("maximum","number");
x.t("better","password");
x.t("balancing","failover");
x.t("may","phased-out");
x.t("may","start");
x.t("may","faster");
x.t("different","super");
x.t("instead","cql");
x.t("release","continue");
x.t("release","either");
x.t("node","(s)");
x.t("socket-level","cassandra");
x.t("read/write","operations");
x.t("initial","connection");
x.t("max_read_attempts","maximum");
x.t("max_read_attempts","max_reconnect_attempts");
x.t("works","cql");
x.t("algorithms","order");
x.t("cassandra's","authenticator");
x.t("retry_wait_millis","5000");
x.t("retry_wait_millis","max_read_attempts");
x.t("retry_wait_millis","retry_wait_millis");
x.t("retry_wait_millis","max_reconnect_attempts");
x.t("dbhost","localhost");
x.t("database","connection");
x.t("database","created");
x.t("database","using");
x.t("database","(thrift)");
x.t("performing","read/write");
x.t("option","meaningful");
x.t("option","true");
x.t("option","start_native_transport");
x.t("option","works");
x.t("option","dbport");
x.t("least","cipher");
x.t("square","brackets");
x.t("e.g","cipher");
x.t("dbport","cql");
x.t("dbport","9160");
x.t("assumption","cassandra");
x.t("longer","successive");
x.t("establish","successful");
x.t("and/or","different");
x.t("configuration","files");
x.t("configuration","operation");
x.t("configuration","parameters");
x.t("cql","enabled");
x.t("cql","thrift");
x.t("cql","apis");
x.t("cql","api");
x.t("cql","api\u2019s");
x.t("cql","recommended");
x.t("cql","tests");
x.t("cql","may");
x.t("amount","time");
x.t("keeps","retrying");
x.t("failure","reconnect");
x.t("configures","host");
x.t("(es)","cassandra");
x.t("hosts","provided");
x.t("value","db_connect_retry_wait_millis");
x.t("value","defaults");
x.t("value","cassandra\u2019s");
x.t("little","faster");
x.t("little","longer");
x.t("suite","tls_rsa_with_aes_128_cbc_sha");
x.t("suite","listed");
x.t("connections","cassandra");
x.t("(s)","doradus");
x.t("(s)","address");
x.t("read","reconnect");
x.t("read","operation");
x.t("read","write");
x.t("read","update");
x.t("retrying","indefinitely");
x.t("passwordauthorizer","initially");
x.t("nodes","jmxport");
x.t("nodes","db_timeout_millis");
x.t("applicable","thrift");
x.t("show","thrift");
x.t("host","name");
x.t("host","names");
x.t("data","loading");
x.t("information","dbtls_cipher_suites");
x.t("timeout","value");
x.t("timeout","milliseconds");
x.t("received","within");
x.t("successful","connection");
x.t("values","passed-in");
x.t("port","default");
x.t("port","number");
x.t("port","nodes");
x.t("port","using");
x.t("db_timeout_millis","60000");
x.t("db_timeout_millis","above");
x.t("rpc","timeout");
x.t("above","doradus");
x.t("milliseconds","doradus");
x.t("milliseconds","applicable");
x.t("note","however");
x.t("note","doradus");
x.t("typically","based");
x.t("based","cassandra\u2019s");
x.t("times-out","db_timeout_millis");
x.t("[tls_rsa_with_aes_128_cbc_sha]","list");
x.t("call","cassandra");
x.t("call","fails");
x.t("call","max_commit_attempts");
x.t("created","doradus");
x.t("created","v2.1");
x.t("created","v2.2");
x.t("order","establish");
x.t("used","certificate");
x.t("used","ssl/tls");
x.t("used","connecting");
x.t("cassandra.yaml","file");
x.t("either","thrift");
x.t("using","thrift");
x.t("using","something");
x.t("connect","static");
x.t("connect","read");
x.t("connect","round-robin");
x.t("7199","change");
x.t("7199","cassandra");
x.t("additionally","doradus.yaml");
x.t("initiated","note");
x.t("max_reconnect_attempts","use_cql");
x.t("max_reconnect_attempts","maximum");
x.t("authenticator","passwordauthorizer");
x.t("password","and/or");
x.t("names","comma-separated");
x.t("load","balancing");
x.t("9160","cassandra");
x.t("operations","typically");
x.t("operations","connect");
x.t("waits","failed");
x.t("waits","amount");
x.t("waits","little");
x.t("performed","read");
x.t("dbuser","cassandra");
x.t("(thrift)","initial");
x.t("aborting","operation");
x.t("server","connect");
x.t("comma-separated","single");
x.t("comma-separated","list");
x.t("round-robin","fashion");
x.t("seconds","means");
x.t("update","operation");
x.t("update","read");
x.t("update","call");
x.t("generally","always");
x.t("super","user");
x.t("super","id/password");
x.t("dynamically","run-time");
}
