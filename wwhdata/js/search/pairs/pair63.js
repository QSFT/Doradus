function FileData_Pairs(x)
{
x.t("enabling","tls");
x.t("example","required");
x.t("example","settings");
x.t("below","dbtls");
x.t("below","client_encryption_options");
x.t("below","cassandra.yaml");
x.t("keystorepassword","doradus.yaml");
x.t("files","cassandra");
x.t("shown","below");
x.t("dbtls_cipher_suites","cipher");
x.t("dbtls_cipher_suites","[tls_rsa_with_aes_128_cbc_sha]");
x.t("create","certificate");
x.t("required","settings");
x.t("instance","requires");
x.t("instance","enable");
x.t("keystore","keystorepassword");
x.t("keystore","doradus");
x.t("keystore","../conf/.keystore");
x.t("enabled","truststore");
x.t("enabled","true");
x.t("thrift","cql");
x.t("authenticate","prevent");
x.t("connection","allow");
x.t("default","apis");
x.t("apis","unencrypted");
x.t("unencrypted","connection");
x.t("require","client");
x.t("doradus","instance");
x.t("doradus","default");
x.t("doradus","add");
x.t("cipher_suites","cipher");
x.t("cipher_suites","[tls_rsa_with_aes_128_cbc_sha]");
x.t("doradus.yaml","file");
x.t("cassandra","example");
x.t("cassandra","thrift");
x.t("cassandra","cipher_suites");
x.t("cassandra","security");
x.t("cassandra","api");
x.t("cassandra","truststore");
x.t("cassandra","node");
x.t("cassandra","enable");
x.t("cassandra","configuration");
x.t("cassandra","require_client_auth");
x.t("security","options");
x.t("file","doradus");
x.t("file","cassandra");
x.t("file","information");
x.t("found","documentation");
x.t("add","cassandra");
x.t("add","certificate");
x.t("api","cassandra");
x.t("api","securing");
x.t("api","either");
x.t("api","used");
x.t("truststore","truststore_password");
x.t("truststore","node");
x.t("truststore","conf/.truststore");
x.t("directly","accessing");
x.t("true","dbtls_cipher_suites");
x.t("true","keystore");
x.t("true","truststore");
x.t("true","finally");
x.t("true","client");
x.t("true","client_encryption_options");
x.t("requires","keystore");
x.t("operation","cassandra");
x.t("settings","shown");
x.t("creating","certificates");
x.t("keystore_password","cassandra");
x.t("truststore_password","cassandra");
x.t("truststore_password","options");
x.t("suites","accessible");
x.t("certificates","found");
x.t("allow","process");
x.t("cipher","suites");
x.t("cipher","(s)");
x.t("certificate","created");
x.t("certificate","used");
x.t("unauthorized","applications");
x.t("finally","dbtls_cipher_suites");
x.t("finally","cipher_suites");
x.t("securing","cassandra");
x.t("options","finally");
x.t("options","securing");
x.t("dbtls","true");
x.t("tls","creating");
x.t("tls","described");
x.t("tls","general");
x.t("tls","setting");
x.t("accessing","cassandra");
x.t("step","keystore");
x.t("node","doradus.yaml");
x.t("node","enable");
x.t("accessible","jre");
x.t("enable","tls");
x.t("steps","enabling");
x.t("client","authentication");
x.t("documentation","following");
x.t("configuration","files");
x.t("configuration","operation");
x.t("cql","api");
x.t("process","connect");
x.t("client_encryption_options","enabled");
x.t("client_encryption_options","require");
x.t("authentication","enabled");
x.t("authentication","setting");
x.t("(s)","defined");
x.t("information","enabling");
x.t("defined","cassandra");
x.t("prevent","unauthorized");
x.t("../conf/.keystore","keystore_password");
x.t("described","below");
x.t("applications","directly");
x.t("[tls_rsa_with_aes_128_cbc_sha]","create");
x.t("[tls_rsa_with_aes_128_cbc_sha]","add");
x.t("require_client_auth","true");
x.t("created","step");
x.t("either","cassandra");
x.t("used","doradus");
x.t("cassandra.yaml","file");
x.t("jre","example");
x.t("following","http://www.datastax.com/documentation/cassandra/2.0/cassandra/security/securesslclienttonode_t.html");
x.t("connect","authenticate");
x.t("general","steps");
x.t("setting","enabled");
x.t("setting","dbtls");
x.t("setting","require_client_auth");
x.t("conf/.truststore","truststore_password");
}
