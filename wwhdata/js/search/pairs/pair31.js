function FileData_Pairs(x)
{
x.t("example","user");
x.t("example","curl");
x.t("example","authorization");
x.t("example","following");
x.t("passed","using");
x.t("supports","basic");
x.t("/_applications","tenant=hellokitty");
x.t("parameter","example");
x.t("parameter","provided");
x.t("parameter","given");
x.t("base64","value");
x.t("managing","storage");
x.t("receives","header");
x.t("anywhere","query");
x.t("create","new");
x.t("sending","query");
x.t("base64-encoded","example");
x.t("required","note");
x.t("/_olapp","tenant=hellokitty");
x.t("/foo/bar/_query","&tenant=hellokitty");
x.t("/foo/bar/_query","tenant=hellokitty");
x.t("user","credentials");
x.t("user","password");
x.t("/_tasks","tenant=hellokitty");
x.t("uses","uri");
x.t("&q=","tenant-specific");
x.t("xxx","xxx");
x.t("xxx","tenant");
x.t("mode","commands");
x.t("mode","multi-tenant");
x.t("mode","application");
x.t("provided","command");
x.t("look","authorization");
x.t("basic","xxx");
x.t("basic","auth");
x.t("basic","authorization");
x.t("basic","authentication");
x.t("basic","s2f0bmlzczpfdmvyzgvlbgo=");
x.t("curl","supports");
x.t("curl","katniss:everdeen");
x.t("colon","base64-encoded");
x.t("response","note");
x.t("hence","kept");
x.t("identify","target");
x.t("browser","tenant");
x.t("default","tenant");
x.t("doradus","receives");
x.t("doradus","operating");
x.t("new","application");
x.t("access","default");
x.t("access","tenant");
x.t("&tenant=hellokitty","/foo/bar/_query");
x.t("command","uses");
x.t("command","returns");
x.t("command","directed");
x.t("uri","example");
x.t("uri","query");
x.t("tenant=hellokitty","create");
x.t("tenant=hellokitty","&q=");
x.t("tenant=hellokitty","list");
x.t("tenant=hellokitty","add");
x.t("tenant=hellokitty","display");
x.t("list","tasks");
x.t("add","data");
x.t("incorrect","identified");
x.t("credentials","passed");
x.t("credentials","required");
x.t("credentials","tenant");
x.t("credentials","used");
x.t("olap","browser");
x.t("true","rest");
x.t("decoded","validated");
x.t("tasks","applications");
x.t("auth","header");
x.t("perform","application-specific");
x.t("parameters","tenant");
x.t("parameters","separated");
x.t("http://localhost:1123/hellokitty/","tenant");
x.t("identified","tenant");
x.t("rest","command");
x.t("rest","commands");
x.t("appending","tenant=");
x.t("post","/_applications");
x.t("post","/foo/bar");
x.t("target","tenant");
x.t("string","uri");
x.t("katniss:everdeen","http://localhost:1123/hellokitty/");
x.t("katniss:everdeen","header");
x.t("commands","identify");
x.t("commands","supported");
x.t("commands","equivalent");
x.t("commands","multi-tenant");
x.t("commands","define");
x.t("commands","accompanied");
x.t("commands","directed");
x.t("supported","managing");
x.t("display","olap");
x.t("equivalent","sending");
x.t("unauthorized","response");
x.t("ampersand","following");
x.t("schemas","update");
x.t("kept","secured");
x.t("hellokitty","tenant");
x.t("hellokitty","examples");
x.t("multi-tenant","mode");
x.t("multi-tenant","configuration");
x.t("tenant","parameter");
x.t("tenant","/foo/bar/_query");
x.t("tenant","user");
x.t("tenant","hence");
x.t("tenant","credentials");
x.t("tenant","appending");
x.t("tenant","rest");
x.t("tenant","may");
x.t("tenant","named");
x.t("tenant","note");
x.t("define","modify");
x.t("may","disabled");
x.t("against","given");
x.t("tenant-specific","application");
x.t("{tenant}","uri");
x.t("tenant=","{tenant}");
x.t("disabled","option");
x.t("operating","multi-tenant");
x.t("option","disable_default_keyspace");
x.t("given","anywhere");
x.t("given","tenant");
x.t("authorization","example");
x.t("authorization","basic");
x.t("header","base64");
x.t("header","look");
x.t("header","authorization");
x.t("configuration","application");
x.t("disable_default_keyspace","true");
x.t("named","hellokitty");
x.t("value","decoded");
x.t("/foo/bar","tenant=hellokitty");
x.t("foo","/_tasks");
x.t("foo","hellokitty");
x.t("valid","credentials");
x.t("authentication","adding");
x.t("data","perform");
x.t("data","query");
x.t("data","application");
x.t("query","parameters");
x.t("query","string");
x.t("query","data");
x.t("query","application");
x.t("examples","post");
x.t("application","rest");
x.t("application","post");
x.t("application","commands");
x.t("application","schemas");
x.t("application","foo");
x.t("401","unauthorized");
x.t("note","curl");
x.t("note","access");
x.t("note","super");
x.t("applications","/_olapp");
x.t("accompanied","valid");
x.t("storage","service");
x.t("service","doradus");
x.t("following","commands");
x.t("separated","colon");
x.t("separated","ampersand");
x.t("used","access");
x.t("using","basic");
x.t("password","incorrect");
x.t("password","katniss:everdeen");
x.t("password","separated");
x.t("adding","parameter");
x.t("returns","401");
x.t("modify","application");
x.t("directed","default");
x.t("directed","tenant");
x.t("validated","against");
x.t("update","data");
x.t("application-specific","commands");
x.t("s2f0bmlzczpfdmvyzgvlbgo=","doradus");
x.t("super","user");
}
