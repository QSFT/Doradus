function FileData_Pairs(x)
{
x.t("example","truncate");
x.t("example","multi-level");
x.t("example","result");
x.t("included","metric");
x.t("parameter","list");
x.t("parameter","multi-level");
x.t("below","example");
x.t("below","results");
x.t("day","top-level");
x.t("day","tags");
x.t("computation","group");
x.t("shown","below");
x.t("/metric","field");
x.t("table","link");
x.t("senddate","day");
x.t("senddate","2010-07-17");
x.t("senddate","2010-07-18");
x.t("summary","element");
x.t("summary","1278");
x.t("summary","6030");
x.t("summary","4752");
x.t("summary","value");
x.t("name=","senddate");
x.t("name=","tags");
x.t("creates","groups");
x.t("field","below");
x.t("field","senddate");
x.t("field","name=");
x.t("field","query");
x.t("field","tags");
x.t("field","values");
x.t("metric=","count");
x.t("/totalobjects","summary");
x.t("customer","group");
x.t("customer","/field");
x.t("customer","non-leaf");
x.t("lower-level","group");
x.t("response","json");
x.t("multiple","grouping");
x.t("form","multi-level");
x.t("00:00:00","/field");
x.t("00:00:00","groups");
x.t("count","group");
x.t("count","group=");
x.t("link","scalar");
x.t("element","provides");
x.t("element","structure");
x.t("element","containing");
x.t("/groups","/group");
x.t("/groups","/results");
x.t("list","multiple");
x.t("group","example");
x.t("group","summary");
x.t("group","inner");
x.t("group","metric");
x.t("group","truncate");
x.t("group","actual");
x.t("group","totalobjects");
x.t("group","elements");
x.t("results","aggregate");
x.t("spider","aggregate");
x.t("path","perspective");
x.t("second-level","grouping");
x.t("aggregate","metric=");
x.t("aggregate","metric");
x.t("aggregate","queries");
x.t("aggregate","query");
x.t("inner","groups");
x.t("provides","group-level");
x.t("1278","/metric");
x.t("1278","field");
x.t("1278","/summary");
x.t("cross-product","grouping");
x.t("metric","computation");
x.t("metric","/metric");
x.t("metric","field");
x.t("metric","count");
x.t("metric","element");
x.t("metric","1278");
x.t("metric","4751");
x.t("metric","computed");
x.t("metric","1524");
x.t("metric","value");
x.t("metric","700");
x.t("6030","summary");
x.t("6030","/totalobjects");
x.t("6030","groups");
x.t("6030","/summary");
x.t("4751","/metric");
x.t("4751","field");
x.t("queries","grouping");
x.t("4752","field");
x.t("4752","/summary");
x.t("top-level","group");
x.t("top-level","grouping");
x.t("computed","top-level");
x.t("computed","combination");
x.t("computed","non-leaf");
x.t("scalar","field");
x.t("expressions","form");
x.t("m=count","&f=truncate");
x.t("combination","least");
x.t("/field","groups");
x.t("/field","/group");
x.t("non-leaf","group");
x.t("2010-07-17","00:00:00");
x.t("xml","shown");
x.t("2010-07-18","00:00:00");
x.t("truncate","senddate");
x.t("multi-level","aggregate");
x.t("multi-level","grouping");
x.t("groups","element");
x.t("groups","group");
x.t("groups","metric");
x.t("groups","based");
x.t("(null)","group");
x.t("(null)","/field");
x.t("1524","/metric");
x.t("1524","field");
x.t("least","object");
x.t("/summary","field");
x.t("/summary","groups");
x.t("/msgs/message/_aggregate","m=count");
x.t("actual","values");
x.t("totalobjects","6030");
x.t("totalobjects","value");
x.t("afterhours","group");
x.t("afterhours","/field");
x.t("/group","/groups");
x.t("/group","group");
x.t("value","computed");
x.t("value","perspective");
x.t("value","leaf-level");
x.t("expression","path");
x.t("query","creates");
x.t("query","/msgs/message/_aggregate");
x.t("group=","truncate");
x.t("group-level","metric");
x.t("tags","example");
x.t("tags","customer");
x.t("tags","second-level");
x.t("tags","(null)");
x.t("tags","totalobjects");
x.t("tags","afterhours");
x.t("result","xml");
x.t("values","summary");
x.t("values","metric");
x.t("recursive","two");
x.t("/results","response");
x.t("structure","recursive");
x.t("perspective","table");
x.t("perspective","object");
x.t("json","results");
x.t("two","grouping");
x.t("&f=truncate","senddate");
x.t("based","cross-product");
x.t("corresponding","lower-level");
x.t("elements","summary");
x.t("containing","corresponding");
x.t("grouping","parameter");
x.t("grouping","field");
x.t("grouping","spider");
x.t("grouping","expressions");
x.t("grouping","multi-level");
x.t("grouping","expression");
x.t("grouping","grouping");
x.t("grouping","levels");
x.t("leaf-level","groups");
x.t("object","included");
x.t("object","value");
x.t("700","/metric");
x.t("700","field");
}
