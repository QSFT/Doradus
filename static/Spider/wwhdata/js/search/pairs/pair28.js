function FileData_Pairs(x)
{
x.t("searching","allowed");
x.t("indexed","thereby");
x.t("indexed","nullanalyzer");
x.t("indexed","values");
x.t("un-indexed","fields");
x.t("binary","fields");
x.t("field","indexed");
x.t("field","stored");
x.t("field","assigned");
x.t("hence","fields");
x.t("property","4.7.1.2.5");
x.t("4.7.1.2.5","nullanalyzer");
x.t("spider","data");
x.t("stored","as-is");
x.t("stored","note");
x.t("analyzer","property");
x.t("fields","indexed");
x.t("fields","hence");
x.t("fields","analyzer");
x.t("fields","scalar");
x.t("fields","assigned");
x.t("thereby","reducing");
x.t("as-is","indexed");
x.t("space","searching");
x.t("allowed","un-indexed");
x.t("nullanalyzer","spider");
x.t("nullanalyzer","4.7.1.2.5");
x.t("nullanalyzer","stored");
x.t("nullanalyzer","scalar");
x.t("nullanalyzer","prevents");
x.t("scalar","field");
x.t("scalar","fields");
x.t("assigned","nullanalyzer");
x.t("data","model");
x.t("values","field");
x.t("reducing","storage");
x.t("note","binary");
x.t("prevents","corresponding");
x.t("model","fields");
x.t("corresponding","field");
x.t("storage","space");
}
