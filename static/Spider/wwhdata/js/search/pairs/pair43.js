function FileData_Pairs(x)
{
x.t("example","name=");
x.t("example","name=smith");
x.t("example","string");
x.t("four","hex");
x.t("carriage","return");
x.t("full","text");
x.t("needs","used");
x.t("dql","queries");
x.t("name=","john");
x.t("name=smith","value");
x.t("double","quotes");
x.t("double","quote");
x.t("field","name");
x.t("later","string");
x.t("uses","backslash");
x.t("nnnn","consist");
x.t("provided","single");
x.t("provided","unquoted");
x.t("smith","treated");
x.t("smith","string");
x.t("smith","note");
x.t("(dql)","literals");
x.t("sender=","cihsptpzrcm6oxavqh6dwa==");
x.t("followed","smith");
x.t("multiple","terms");
x.t("formats","characters");
x.t("form","feed");
x.t("text","string");
x.t("doradus","uses");
x.t("doradus","query");
x.t("doradus","object");
x.t("consists","multiple");
x.t("single","double");
x.t("single","unquoted");
x.t("single","quote");
x.t("quoted","string");
x.t("literally","escaped");
x.t("john","smith");
x.t("_id=isbn1234","sender=");
x.t("backslash","escaping");
x.t("treated","wildcards");
x.t("treated","term");
x.t("escape","formats");
x.t("escape","sequence");
x.t("specified","hello\\u0021world");
x.t("name","field");
x.t("name","followed");
x.t("enclosed","single");
x.t("non-printable","characters");
x.t("follows","field");
x.t("0-f","example");
x.t("escaped","escaping");
x.t("strings","doradus");
x.t("strings","strings");
x.t("strings","clauses");
x.t("strings","therefore");
x.t("escaping","two");
x.t("escaping","used");
x.t("string","needs");
x.t("string","consists");
x.t("string","enclosed");
x.t("string","follows");
x.t("string","characters");
x.t("string","conforms");
x.t("string","instead");
x.t("string","hello");
x.t("string","examples");
x.t("characters","doradus");
x.t("characters","treated");
x.t("characters","0-f");
x.t("characters","allowed");
x.t("characters","tab");
x.t("unquoted","example");
x.t("unquoted","term");
x.t("quotes","example");
x.t("queries","object");
x.t("syntax","term");
x.t("allowed","terms");
x.t("(backslash)","\\unnnn");
x.t("quote","double");
x.t("quote","(backslash)");
x.t("conforms","syntax");
x.t("may","provided");
x.t("unicode","character");
x.t("language","(dql)");
x.t("instead","term");
x.t("wildcards","terms");
x.t("(backspace)","newline");
x.t("term","provided");
x.t("term","text");
x.t("term","quoted");
x.t("term","equality");
x.t("ids","strings");
x.t("return","form");
x.t("feed","single");
x.t("value","smith");
x.t("clauses","described");
x.t("clauses","compare");
x.t("hello","world");
x.t("sequence","used");
x.t("query","language");
x.t("examples","_id=isbn1234");
x.t("described","later");
x.t("character","nnnn");
x.t("character","(backspace)");
x.t("note","doradus");
x.t("two","escape");
x.t("newline","carriage");
x.t("literals","strings");
x.t("literals","may");
x.t("used","dql");
x.t("used","literally");
x.t("used","non-printable");
x.t("used","unicode");
x.t("\\unnnn","escape");
x.t("hex","characters");
x.t("compare","full");
x.t("terms","string");
x.t("terms","contains");
x.t("tab","character");
x.t("therefore","used");
x.t("cihsptpzrcm6oxavqh6dwa==","string");
x.t("world","specified");
x.t("equality","clauses");
x.t("contains","characters");
x.t("object","ids");
x.t("object","literals");
x.t("consist","four");
}
