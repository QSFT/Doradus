function FileData_Pairs(x)
{
x.t("searching","spider");
x.t("searching","makes");
x.t("searching","rich");
x.t("example","application");
x.t("complex","aggregate");
x.t("extensions","compound/composite");
x.t("supports","applications");
x.t("indexed","stored");
x.t("provide","wide");
x.t("transactions","applications");
x.t("easy","navigate");
x.t("needs","fine-grained");
x.t("files","messages");
x.t("intended","short-lived");
x.t("harvests","data");
x.t("immutable","semi-mutable");
x.t("immutable","structured");
x.t("table","suffice");
x.t("dql","extensions");
x.t("dql","path");
x.t("dql","immediate");
x.t("required","olap");
x.t("required","fields");
x.t("binary","fields");
x.t("denser","space");
x.t("persistent","hash");
x.t("persistent","queue");
x.t("populations","indexing");
x.t("storing","indexing");
x.t("tables","dql");
x.t("multi-field","searching");
x.t("uses","rich");
x.t("pages","emails");
x.t("hash","table");
x.t("field","stored");
x.t("support","applications");
x.t("support","bi-directional");
x.t("provided","scalar");
x.t("highly","unstructured");
x.t("semi-mutable","structured");
x.t("best","doradus");
x.t("best","spider");
x.t("vary","structured");
x.t("suited","storing");
x.t("batch","single-object");
x.t("single-object","updates");
x.t("aging","allows");
x.t("discover","fields");
x.t("simpler","database");
x.t("fine-grained","searching");
x.t("fine-grained","multi-field");
x.t("fine-grained","updates");
x.t("require","fine-grained");
x.t("structured","highly");
x.t("structured","data");
x.t("text","binary");
x.t("queue","good");
x.t("doradus","spider");
x.t("doradus","olap");
x.t("phrases","wildcards");
x.t("objects","intended");
x.t("objects","documents");
x.t("objects","different");
x.t("objects","even");
x.t("servers","may");
x.t("updates","required");
x.t("updates","batch");
x.t("updates","single");
x.t("updates","efficient");
x.t("single","objects");
x.t("single","fields");
x.t("conversely","doradus");
x.t("want","persistent");
x.t("designed","support");
x.t("queried","via");
x.t("document","management");
x.t("choice","immutable");
x.t("choice","simpler");
x.t("choice","following");
x.t("file","servers");
x.t("indexes","data");
x.t("need","acid");
x.t("cassandra","loads");
x.t("any-field","field-specific");
x.t("frequent","updates");
x.t("unless","immediate");
x.t("anti-patterns","spider");
x.t("anti-patterns","applications");
x.t("spider","supports");
x.t("spider","provides");
x.t("spider","databases");
x.t("spider","better");
x.t("spider","works");
x.t("spider","database");
x.t("spider","consumes");
x.t("spider","good");
x.t("spider","ideal");
x.t("overview","spider");
x.t("large","object");
x.t("large","content");
x.t("features","spider");
x.t("navigate","relationships");
x.t("via","dql");
x.t("olap","spider");
x.t("olap","provides");
x.t("olap","better");
x.t("range","searches");
x.t("range","ways");
x.t("path","expressions");
x.t("stored","making");
x.t("stored","column");
x.t("wide","range");
x.t("faster","queries");
x.t("short-lived","large");
x.t("searches","provided");
x.t("searches","terms");
x.t("aggregate","queries");
x.t("compound/composite","grouping");
x.t("fit","field");
x.t("fit","objects");
x.t("provides","faster");
x.t("provides","rich");
x.t("filtering","quantifiers");
x.t("makes","spider");
x.t("web","pages");
x.t("allows","expiration");
x.t("fields","indexed");
x.t("fields","queried");
x.t("fields","features");
x.t("fields","quick");
x.t("fields","10mb");
x.t("fields","actually");
x.t("fields","predefined");
x.t("fields","wants");
x.t("fields","even");
x.t("dynamically-defined","fields");
x.t("immediate","indexing");
x.t("expiration","object");
x.t("store","index");
x.t("quick","immediately");
x.t("nosql","anti-patterns");
x.t("queries","dql");
x.t("queries","denser");
x.t("queries","document");
x.t("queries","used");
x.t("documents","files");
x.t("loads","whole");
x.t("databases","designed");
x.t("space","fields");
x.t("space","storage");
x.t("messages","text");
x.t("10mb","work");
x.t("transitive","searching");
x.t("rich","any-field");
x.t("rich","relationships");
x.t("scalar","fields");
x.t("indexing","fine-grained");
x.t("indexing","large");
x.t("indexing","fields");
x.t("indexing","disabled");
x.t("queryable","variable");
x.t("better","suited");
x.t("better","choice");
x.t("reflected","indexes");
x.t("field-specific","searches");
x.t("different","tables");
x.t("expressions","easy");
x.t("may","dynamically");
x.t("index","even");
x.t("ways","aggregate");
x.t("scenario","unless");
x.t("wildcards","efficient");
x.t("works","best");
x.t("scenarios","immutable");
x.t("whole","column");
x.t("disabled","stored-only");
x.t("database","persistent");
x.t("database","overview");
x.t("schema","spider");
x.t("consumes","space");
x.t("memory","streaming");
x.t("whose","data");
x.t("variable","structure");
x.t("compared","doradus");
x.t("unstructured","example");
x.t("suffice","nosql");
x.t("quantifiers","transitive");
x.t("actually","values");
x.t("making","immediately");
x.t("(blob)","storage");
x.t("schedule","complex");
x.t("good","choice");
x.t("good","fit");
x.t("data","required");
x.t("data","uses");
x.t("data","vary");
x.t("data","aging");
x.t("data","spider");
x.t("data","web");
x.t("data","nosql");
x.t("emails","file");
x.t("application","harvests");
x.t("values","memory");
x.t("values","predefined");
x.t("efficient","frequent");
x.t("efficient","equality");
x.t("structure","data");
x.t("predefined","dynamically-defined");
x.t("predefined","schema");
x.t("column","cassandra");
x.t("column","values");
x.t("applications","require");
x.t("applications","doradus");
x.t("applications","want");
x.t("applications","need");
x.t("applications","whose");
x.t("applications","following");
x.t("easily","queryable");
x.t("work","fine-grained");
x.t("based","schedule");
x.t("immediately","reflected");
x.t("immediately","visible");
x.t("following","needs");
x.t("following","scenarios");
x.t("relationships","objects");
x.t("relationships","filtering");
x.t("relationships","easily");
x.t("relationships","links");
x.t("links","support");
x.t("wants","store");
x.t("management","compared");
x.t("used","conversely");
x.t("storage","scenario");
x.t("storage","good");
x.t("acid","transactions");
x.t("bi-directional","relationships");
x.t("streaming","supported");
x.t("terms","phrases");
x.t("ideal","applications");
x.t("grouping","provide");
x.t("stored-only","fields");
x.t("equality","range");
x.t("even","structured");
x.t("even","single");
x.t("even","large");
x.t("visible","queries");
x.t("object","populations");
x.t("object","(blob)");
x.t("object","based");
x.t("dynamically","discover");
x.t("content","objects");
}
