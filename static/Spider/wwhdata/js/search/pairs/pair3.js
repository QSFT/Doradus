function FileData_Pairs(x)
{
x.t("searching","bi-directional");
x.t("supports","schemaless");
x.t("example","demonstrates");
x.t("example","doradus/cassandra");
x.t("recoverability","node-");
x.t("below","example");
x.t("below","key");
x.t("below","apps");
x.t("available","monitor");
x.t("provide","dense");
x.t("provide","functions");
x.t("provide","storage");
x.t("balance","network");
x.t("hiding","complexities");
x.t("full","text");
x.t("full","details");
x.t("within","application");
x.t("within","service");
x.t("intended","data");
x.t("shown","below");
x.t("failover","cassandra");
x.t("failover","enjoying");
x.t("currently","uses");
x.t("currently","provides");
x.t("immutable","semi-mutable");
x.t("schemaless","applications");
x.t("installed","services");
x.t("analytic","queries");
x.t("key","components");
x.t("summarized","below");
x.t("instance","single");
x.t("instance","cassandra");
x.t("instance","fail");
x.t("instance","cluster");
x.t("instance","running");
x.t("instance","typically");
x.t("instance","using");
x.t("persistent","replication");
x.t("replication","failover");
x.t("replication","default");
x.t("replication","strategies");
x.t("replication","load");
x.t("components","architecture");
x.t("performs","heavy");
x.t("uses","replication");
x.t("uses","online");
x.t("uses","apache");
x.t("points","provided");
x.t("provided","doradus");
x.t("provided","run");
x.t("physical","access");
x.t("semi-mutable","time-series");
x.t("support","applications");
x.t("highly","mutable");
x.t("mode","allows");
x.t("mode","means");
x.t("mode","named");
x.t("mode","described");
x.t("keyspace","multi-tenant");
x.t("deployment","features");
x.t("deployment","configuration");
x.t("center","knowledge");
x.t("complexities","underlying");
x.t("providing","automatic");
x.t("providing","data");
x.t("near","cassandra");
x.t("operates","single-tenant");
x.t("hence","application");
x.t("distribute","requests");
x.t("jetty","server");
x.t("releases","intended");
x.t("multiple","doradus");
x.t("multiple","applications");
x.t("scalability","replication");
x.t("text","searching");
x.t("fine-grained","updates");
x.t("default","doradus");
x.t("doradus","currently");
x.t("doradus","instance");
x.t("doradus","operates");
x.t("doradus","cassandra");
x.t("doradus","spider");
x.t("doradus","olap");
x.t("doradus","perform");
x.t("doradus","configured");
x.t("doradus","cluster");
x.t("doradus","database");
x.t("doradus","java");
x.t("doradus","architecture");
x.t("doradus","instances");
x.t("doradus","administration");
x.t("doradus","server");
x.t("horizontal","scalability");
x.t("access","doradus");
x.t("access","features");
x.t("access","special");
x.t("updates","table-level");
x.t("single","instance");
x.t("single","doradus");
x.t("single","cassandra");
x.t("details","installing");
x.t("details","configuring");
x.t("doradus.yaml","configuration");
x.t("failures","details");
x.t("cassandra","instance");
x.t("cassandra","performs");
x.t("cassandra","uses");
x.t("cassandra","keyspace");
x.t("cassandra","nosql");
x.t("cassandra","configured");
x.t("cassandra","cluster");
x.t("cassandra","instances");
x.t("apps","applications");
x.t("security","full");
x.t("machine","windows");
x.t("installing","configuring");
x.t("simple","rest");
x.t("api","available");
x.t("api","jmx");
x.t("api","embedded");
x.t("entry","points");
x.t("initialized","based");
x.t("isolation","security");
x.t("network","near");
x.t("network","bandwidth");
x.t("features","hiding");
x.t("features","full");
x.t("features","support");
x.t("features","doradus");
x.t("features","specific");
x.t("overview","doradus");
x.t("jmx","api");
x.t("spider","database");
x.t("spider","service");
x.t("spider","storage");
x.t("configuring","doradus/cassandra");
x.t("configuring","operating");
x.t("high","level");
x.t("via","procrun");
x.t("olap","uses");
x.t("olap","database");
x.t("olap","service");
x.t("olap","storage");
x.t("stored","single");
x.t("stored","separate");
x.t("common","doradus");
x.t("jvm","application");
x.t("demonstrates","several");
x.t("perform","administrative");
x.t("component","controls");
x.t("dense","storage");
x.t("shutdown","services");
x.t("provides","two");
x.t("heavy","lifting");
x.t("doradus/cassandra","clusters");
x.t("doradus/cassandra","multi-node");
x.t("rest","api");
x.t("rest","service");
x.t("allows","distribute");
x.t("allows","multiple");
x.t("allows","applications");
x.t("stand-alone","application");
x.t("fast","processing");
x.t("local","cassandra");
x.t("encapsulates","functions");
x.t("nosql","horizontal");
x.t("nosql","database");
x.t("functions","within");
x.t("functions","rest");
x.t("functions","doradusserver");
x.t("techniques","provide");
x.t("tenants","applications");
x.t("rack","racks");
x.t("clusters","provided");
x.t("queries","overview");
x.t("queries","service");
x.t("configured","network");
x.t("configured","spider");
x.t("configured","olap");
x.t("configured","know");
x.t("configured","storage");
x.t("deployed","node");
x.t("deployed","scale");
x.t("rack-","data");
x.t("time-series","data");
x.t("automatic","failover");
x.t("know","nodes");
x.t("means","applications");
x.t("fail","cassandra");
x.t("underlying","database");
x.t("processing","physical");
x.t("processing","techniques");
x.t("processing","analytical");
x.t("lifting","terms");
x.t("cluster","shown");
x.t("cluster","providing");
x.t("cluster","doradus");
x.t("cluster","horizontally");
x.t("cluster","adding");
x.t("rich","features");
x.t("indexing","fine-grained");
x.t("multi-tenant","mode");
x.t("balancing","replication");
x.t("share","common");
x.t("powerful","analytic");
x.t("powerful","features");
x.t("stores","cassandra");
x.t("requests","doradus");
x.t("requests","local");
x.t("racks","data");
x.t("types","doradus");
x.t("termed","doradus");
x.t("leverages","extends");
x.t("multi-node","cluster");
x.t("node","doradus");
x.t("level","rest");
x.t("benefits","nosql");
x.t("fully","inverted");
x.t("sharding","features");
x.t("database","spider");
x.t("database","high");
x.t("database","olap");
x.t("database","allows");
x.t("database","configured");
x.t("database","persistence");
x.t("schema","processing");
x.t("persistence","future");
x.t("operating","multi-tenant");
x.t("java","server");
x.t("embedded","within");
x.t("embedded","jetty");
x.t("embedded","jvm");
x.t("variable","data");
x.t("documentation","minimal");
x.t("center-level","failures");
x.t("architecture","summarized");
x.t("architecture","doradus");
x.t("architecture","encapsulates");
x.t("architecture","architecture");
x.t("architecture","depicted");
x.t("windows","instances");
x.t("windows","service");
x.t("and/or","variable");
x.t("peers","hence");
x.t("node-","rack-");
x.t("configuration","single");
x.t("configuration","services");
x.t("instances","installed");
x.t("instances","providing");
x.t("instances","allows");
x.t("instances","deployed");
x.t("instances","peers");
x.t("core","component");
x.t("modules","services");
x.t("single-tenant","mode");
x.t("named","tenants");
x.t("running","machine");
x.t("specific","application");
x.t("analytical","queries");
x.t("analytical","processing");
x.t("several","deployment");
x.t("extends","cassandra");
x.t("administrative","functions");
x.t("services","provide");
x.t("services","doradus");
x.t("services","single");
x.t("services","entry");
x.t("services","initialized");
x.t("services","olap");
x.t("online","analytical");
x.t("inverted","indexing");
x.t("separate","keyspace");
x.t("nodes","rack");
x.t("depicted","below");
x.t("data","center");
x.t("data","doradus");
x.t("data","isolation");
x.t("data","spider");
x.t("data","stores");
x.t("data","center-level");
x.t("mutable","and/or");
x.t("enjoying","rich");
x.t("future","releases");
x.t("horizontally","example");
x.t("application","multiple");
x.t("application","types");
x.t("application","leverages");
x.t("application","windows");
x.t("application","services");
x.t("application","submit");
x.t("monitor","doradus");
x.t("scale","cluster");
x.t("submit","requests");
x.t("knowledge","cassandra");
x.t("described","doradus");
x.t("two","storage");
x.t("administration","document");
x.t("administration","documentation");
x.t("applications","immutable");
x.t("applications","highly");
x.t("applications","access");
x.t("applications","cassandra");
x.t("applications","stored");
x.t("applications","share");
x.t("applications","fully");
x.t("applications","leverage");
x.t("leverage","benefits");
x.t("startup","shutdown");
x.t("based","server\u2019s");
x.t("server\u2019s","doradus.yaml");
x.t("typically","deployed");
x.t("typically","configured");
x.t("strategies","balance");
x.t("controls","server");
x.t("service","supports");
x.t("service","doradus");
x.t("service","via");
x.t("service","termed");
x.t("service","modules");
x.t("service","ideal");
x.t("service","sits");
x.t("relationships","powerful");
x.t("run","server");
x.t("procrun","embedded");
x.t("special","class");
x.t("storage","access");
x.t("storage","fast");
x.t("storage","services");
x.t("storage","service");
x.t("bi-directional","relationships");
x.t("using","simple");
x.t("class","storage");
x.t("apache","cassandra");
x.t("adding","powerful");
x.t("ideal","applications");
x.t("terms","persistent");
x.t("minimal","deployment");
x.t("load","balancing");
x.t("doradusserver","core");
x.t("table-level","sharding");
x.t("bandwidth","recoverability");
x.t("server","instance");
x.t("server","stand-alone");
x.t("server","schema");
x.t("server","embedded");
x.t("server","application");
x.t("server","startup");
x.t("sits","applications");
}
