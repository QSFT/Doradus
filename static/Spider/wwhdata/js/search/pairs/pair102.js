function FileData_Pairs(x)
{
x.t("example","aggregate");
x.t("example","suppose");
x.t("recipients.messageaddress.domain.isinternal=false","query");
x.t("parameter","solution");
x.t("parameter","function");
x.t("parameter","instead");
x.t("parameter","special");
x.t("parameter","grouping");
x.t("provide","filtering");
x.t("illustrate","clause");
x.t("manner","case");
x.t("counted","wait");
x.t("counted","recipients.messageaddress.domain.name");
x.t("just","found");
x.t("every","message");
x.t("within","group");
x.t("applied","multiple");
x.t("table","recipients");
x.t("don\u2019t","really");
x.t("don\u2019t","want");
x.t("don\u2019t","need");
x.t("components","grouping");
x.t("field","recipients.messageaddress.domain.name");
x.t("field","clause");
x.t("lies","solely");
x.t("doesn\u2019t","want");
x.t("doesn\u2019t","work");
x.t("receiptdate","2014\u201101\u201101");
x.t("receiptdate","2014-01-01");
x.t("receiptdate","messageaddress");
x.t("importantly","used");
x.t("external","example");
x.t("external","domain");
x.t("bound","objects");
x.t("multiple","components");
x.t("needed","used");
x.t("count","messages");
x.t("really","qualify");
x.t("filters","group");
x.t("filters","values");
x.t("objects","illustrate");
x.t("objects","within");
x.t("objects","selected");
x.t("want","count");
x.t("want","recipients");
x.t("want","/msgs/message/_aggregate");
x.t("want","object");
x.t("certain","date");
x.t("&q=recipients.receiptdate","2014-01-01");
x.t("choice","groups");
x.t("found","query");
x.t("need","separate");
x.t("message\u2019s","recipients");
x.t("group","values");
x.t("filter","query");
x.t("spider","aggregate");
x.t("selects","messages");
x.t("false","groups");
x.t("domains","recipients");
x.t("exploiting","factor");
x.t("counts","recipients.messageaddress.domain.name");
x.t("constraints","objects");
x.t("path","component");
x.t("path","long");
x.t("path","used");
x.t("name","message\u2019s");
x.t("wait","gets");
x.t("follows","/msgs/message/_aggregate");
x.t(".messageaddress.domain.name","grouping");
x.t("(isinternal=false)",".name");
x.t("aggregate","queries");
x.t("aggregate","query");
x.t("qualify","using");
x.t("component","attached");
x.t("filtering","path");
x.t("filtering","recipients");
x.t("&f=recipients.where","receiptdate");
x.t("address","considered");
x.t("selection","criteria");
x.t("thereby","filtering");
x.t("shorter","equivalent");
x.t("solely","choice");
x.t("functions","function");
x.t("selected","counts");
x.t("solution","previous");
x.t("queries","grouping");
x.t("equivalent","expression");
x.t("suppose","want");
x.t("members","table");
x.t("messages","grouped");
x.t("messages","least");
x.t("domain","every");
x.t("domain","name");
x.t("first","field");
x.t("messageaddress.domain.isinternal","false");
x.t("long","subquery");
x.t("messageaddress.domain","shorter");
x.t("function","applied");
x.t("function","filters");
x.t("function","spider");
x.t("function","function");
x.t("function","inserted");
x.t("function","used");
x.t("function","grouping");
x.t("better","function");
x.t("expressions","bound");
x.t("expressions","bind");
x.t("m=count","&f=recipients.where");
x.t("m=count","&f=recipients.messageaddress.domain.name");
x.t(".name","neat");
x.t("recipients.messageaddress.domain.name","function");
x.t("recipients.messageaddress.domain.name","groups");
x.t("recipients.messageaddress.domain.name","values");
x.t("scenario","function");
x.t("instead","query");
x.t("bind","two");
x.t("match","constraints");
x.t("redundant","specification");
x.t("grouped","domain");
x.t("recipients","manner");
x.t("recipients","filters");
x.t("recipients","want");
x.t("recipients","thereby");
x.t("recipients","match");
x.t("recipients","whose");
x.t("recipients","instances");
x.t("recipients","received");
x.t("2014\u201101\u201101","least");
x.t("2014\u201101\u201101","whose");
x.t("groups","just");
x.t("groups","don\u2019t");
x.t("groups","created");
x.t("message","counted");
x.t("message","certain");
x.t("won\u2019t","work");
x.t("&f=recipients.messageaddress.domain.name","&q=recipients.receiptdate");
x.t("&f=recipients.messageaddress.domain.name","&q=recipients.where");
x.t("least","recipient\u2019s");
x.t("least","recipient");
x.t("previous","problem");
x.t("/msgs/message/_aggregate","m=count");
x.t("whose","receiptdate");
x.t("whose","messageaddress.domain.isinternal");
x.t("instances","query");
x.t("qualified","path");
x.t("recipient\u2019s","receiptdate");
x.t("recipient\u2019s","address");
x.t("2014-01-01","recipients.messageaddress.domain.isinternal=false");
x.t("2014-01-01",".address.domain.where");
x.t("2014-01-01","messageaddress.domain.isinternal=false");
x.t("&q=recipients.where","receiptdate");
x.t("messageaddress","members");
x.t(".address.domain.where","(isinternal=false)");
x.t("expression","importantly");
x.t("expression","scenario");
x.t("expression","/msgs/message/_aggregate");
x.t("considered","external");
x.t("clauses","recipients");
x.t("subquery","qualified");
x.t("separate","query");
x.t("query","parameter");
x.t("query","doesn\u2019t");
x.t("query","expressions");
x.t("query","won\u2019t");
x.t("query","clauses");
x.t("query","expression");
x.t("correct","objects");
x.t("inserted","recipients");
x.t("attached","exploiting");
x.t("received","message");
x.t("here\u2019s","example");
x.t("values","counted");
x.t("values","don\u2019t");
x.t("values","used");
x.t("values","even");
x.t("messageaddress.domain.isinternal=false",".messageaddress.domain.name");
x.t("messageaddress.domain.isinternal=false","causes");
x.t("case","recipients");
x.t("problem","expressed");
x.t("specification","messageaddress.domain");
x.t("date","recipient\u2019s");
x.t("two","query");
x.t("work","doesn\u2019t");
x.t("work","want");
x.t("work","selects");
x.t("recipient","external");
x.t("factor","redundant");
x.t("causes","correct");
x.t("created","domains");
x.t("special","grouping");
x.t("used","provide");
x.t("used","here\u2019s");
x.t("used","multi-clause");
x.t("used","grouping");
x.t("multi-clause","expressions");
x.t("clause","receiptdate");
x.t("clause","needed");
x.t("using","filter");
x.t("grouping","parameter");
x.t("grouping","field");
x.t("grouping","path");
x.t("grouping","functions");
x.t("grouping","first");
x.t("grouping","expression");
x.t("criteria","lies");
x.t("expressed","follows");
x.t("even","don\u2019t");
x.t("object","selection");
x.t("gets","better");
}
