function FileData_Pairs(x)
{
x.t("cleanup","implications");
x.t("example","field\u2019s");
x.t("below","adding");
x.t("indexed","previous");
x.t("200","response");
x.t("rename","schema");
x.t("table","new");
x.t("table","added");
x.t("table","existing");
x.t("table","immediately");
x.t("table","deleted");
x.t("table","contains");
x.t("deleting","table");
x.t("deleting","field");
x.t("key","key");
x.t("key","provided");
x.t("key","cannot");
x.t("key","added");
x.t("various","schema");
x.t("summarized","below");
x.t("obsolete","link");
x.t("current","schema");
x.t("field","new");
x.t("field","definition");
x.t("field","aggregate");
x.t("field","field\u2019s");
x.t("field","inverse");
x.t("field","added");
x.t("field","whose");
x.t("field","existing");
x.t("field","longer");
x.t("field","data");
x.t("field","modifications");
x.t("field","immediately");
x.t("field","deleted");
x.t("modified","schema");
x.t("modified","following");
x.t("provided","application");
x.t("type","changed");
x.t("type","although");
x.t("change","deleting");
x.t("change","scenarios");
x.t("change","adding");
x.t("hence","application");
x.t("response","returned");
x.t("however","table");
x.t("however","minimal");
x.t("automatically","reorganize");
x.t("automatically","created");
x.t("automatically","deleted");
x.t("text","timestamp");
x.t("updates","made");
x.t("new","table");
x.t("new","field");
x.t("new","scalar");
x.t("objects","added");
x.t("objects","null");
x.t("link","field");
x.t("link","data");
x.t("link","values");
x.t("command","post");
x.t("(columnfamilies)","automatically");
x.t("content-type","header");
x.t("spider","automatically");
x.t("spider","rest");
x.t("specified","request\u2019s");
x.t("name","request");
x.t("name","cannot");
x.t("name","schema");
x.t("definition","example");
x.t("definition","field");
x.t("changed","text");
x.t("changed","{application}");
x.t("changed","either");
x.t("analyzer","deleting");
x.t("component","type");
x.t("component","however");
x.t("aggregate","queries");
x.t("field\u2019s","type");
x.t("field\u2019s","existing");
x.t("rest","command");
x.t("rest","commands");
x.t("post","/_application/");
x.t("modifying","application");
x.t("extent","table");
x.t("remain","indexed");
x.t("request","include");
x.t("request","successful");
x.t("present","returned");
x.t("text-based","analyzer");
x.t("commands","application");
x.t("commands","modify");
x.t("body","modifying");
x.t("queries","field");
x.t("queries","link");
x.t("queries","changing");
x.t("undefined","field");
x.t("acts","undefined");
x.t("allowed","spider");
x.t("allowed","including");
x.t("underlying","stores");
x.t("scalar","field");
x.t("scalar","link");
x.t("cannot","changed");
x.t("application\u2019s","key");
x.t("application\u2019s","name");
x.t("application\u2019s","schema");
x.t("stores","(columnfamilies)");
x.t("inverse","link");
x.t("inverse","deleted");
x.t("xml","json");
x.t("request\u2019s","content-type");
x.t("match","new");
x.t("match","application");
x.t("returned","queries");
x.t("returned","message");
x.t("changes","allowed");
x.t("changes","existing");
x.t("added","table");
x.t("added","field");
x.t("added","schema");
x.t("added","existing");
x.t("added","including");
x.t("reorganize","data");
x.t("disturbed","acts");
x.t("replaces","current");
x.t("scenarios","data");
x.t("schema","modified");
x.t("schema","change");
x.t("schema","component");
x.t("schema","request");
x.t("schema","underlying");
x.t("schema","application\u2019s");
x.t("schema","xml");
x.t("schema","changes");
x.t("schema","schema");
x.t("header","application\u2019s");
x.t("message","body");
x.t("accommodate","changes");
x.t("previous","text-based");
x.t("whose","extent");
x.t("existing","table");
x.t("existing","objects");
x.t("existing","link");
x.t("existing","scalar");
x.t("existing","application\u2019s");
x.t("existing","data");
x.t("existing","values");
x.t("made","accommodate");
x.t("null","value");
x.t("changing","field");
x.t("longer","used");
x.t("{application}","application\u2019s");
x.t("{application}","match");
x.t("{application}","{application}");
x.t("include","modified");
x.t("value","field");
x.t("although","rename");
x.t("data","cleanup");
x.t("data","various");
x.t("data","remain");
x.t("data","present");
x.t("data","match");
x.t("data","added");
x.t("data","disturbed");
x.t("data","deleted");
x.t("defined","key");
x.t("defined","without");
x.t("removing","schema");
x.t("application","spider");
x.t("application","name");
x.t("application","replaces");
x.t("application","existing");
x.t("application","defined");
x.t("application","management");
x.t("application","modify");
x.t("successful","200");
x.t("implications","summarized");
x.t("values","returned");
x.t("values","deleted");
x.t("modifications","allowed");
x.t("json","specified");
x.t("created","objects");
x.t("immediately","schema");
x.t("timestamp","existing");
x.t("management","commands");
x.t("following","rest");
x.t("either","hence");
x.t("corresponding","stores");
x.t("used","grouping");
x.t("adding","table");
x.t("adding","new");
x.t("adding","removing");
x.t("minimal","updates");
x.t("deleted","obsolete");
x.t("deleted","however");
x.t("deleted","inverse");
x.t("deleted","existing");
x.t("deleted","corresponding");
x.t("grouping","field");
x.t("modify","application");
x.t("without","key");
x.t("/_application/","{application}");
x.t("including","adding");
x.t("including","updated");
x.t("updated","schema");
x.t("contains","link");
}
