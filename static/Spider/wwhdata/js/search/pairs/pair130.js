function FileData_Pairs(x)
{
x.t("example","aggregate");
x.t("example","metric");
x.t("min","(size)");
x.t("sender.person.office","top");
x.t("supports","special");
x.t("parameter","example");
x.t("parameter","omitted");
x.t("below","example");
x.t("q=size","10000");
x.t("defines","objects");
x.t(".isinternal","false");
x.t("table","{params}");
x.t("(senddate)","m=max");
x.t("dql","query");
x.t("divide","computations");
x.t("provided","corresponding");
x.t("q=all","(internalrecipients.person.domain)");
x.t("externalrecipients.messageaddress.domain.name","f=group");
x.t("m=distinct","(name)");
x.t("value/metric","function");
x.t("multiple","grouping");
x.t("sender.person.department","f=batch");
x.t("sender.person.department","cf=");
x.t("count","metric");
x.t("text","(optional)");
x.t("objects","selected");
x.t("objects","function");
x.t("objects","include");
x.t("objects","optionally");
x.t("(sender.person.lastname)","m=average");
x.t("single","value");
x.t("doradus","spider");
x.t("command","{application}");
x.t("size","1000,10000,100000");
x.t("top","sender.person.office");
x.t("top","externalrecipients.messageaddress.domain.name");
x.t("top","sender.person.department");
x.t("uri","spider");
x.t("uri","aggregate");
x.t("uri","parameters");
x.t("uri","request");
x.t("list","metric");
x.t("list","(required)");
x.t("list","(optional)");
x.t("list","grouping");
x.t("(tags)","group");
x.t("group","value/metric");
x.t("group","top");
x.t("group","(tags)");
x.t("group","function");
x.t("&m=count","&f=top");
x.t("requested","using");
x.t("meaningful","aggregate");
x.t("spider","supports");
x.t("spider","rest");
x.t("false","grouping");
x.t("via","uri");
x.t("via","group");
x.t("specified","via");
x.t("name","{table}");
x.t("aggregate","queries");
x.t("aggregate","query");
x.t("m=sum","(size)");
x.t("average","(size)");
x.t("parameters","uri");
x.t("parameters","supported");
x.t("parameters","/msgs/message/_aggregate");
x.t("parameters","separated");
x.t("rest","command");
x.t("rest","commands");
x.t("sets","specified");
x.t("1000,10000,100000","top");
x.t("composite","values");
x.t("composite","grouping");
x.t("metric","functions");
x.t("metric","function");
x.t("metric","computations");
x.t("(size)","min");
x.t("(size)","count");
x.t("(size)","average");
x.t("(size)","m=max");
x.t("extra","composite");
x.t("&f=top","sender.person.department");
x.t("request","rest");
x.t("functions","text");
x.t("functions","calculate");
x.t("selected","objects");
x.t("selected","examples");
x.t("commands","aggregate");
x.t("supported","metric");
x.t("calculate","selected");
x.t("queries","doradus");
x.t("queries","grouping");
x.t("intermediate","grouping");
x.t("feature","called");
x.t("computed","intermediate");
x.t("computed","across");
x.t("f=batch","size");
x.t("10000","&m=count");
x.t("function","provided");
x.t("function","list");
x.t("function","computed");
x.t("function","m=count");
x.t("function","combination");
x.t("function","examples");
x.t("computations","omitted");
x.t("computations","single-");
x.t("m=count","m=distinct");
x.t("expressions","divide");
x.t("combination","multiple");
x.t("{table}","/_aggregate");
x.t("{table}","perspective");
x.t("instead","meaningful");
x.t("omitted","objects");
x.t("omitted","corresponding");
x.t("grouped","queries");
x.t("grouped","query");
x.t("cf=","grouping");
x.t("groups","parameter");
x.t("groups","defined");
x.t("m=max","(sender.person.lastname)");
x.t("m=max","(size)");
x.t("multi-level","grouped");
x.t("multi-level","groups");
x.t("f=group","group");
x.t("/_aggregate","{params}");
x.t("parameter\u2019s","value");
x.t("(required)","list");
x.t("/msgs/message/_aggregate","q=size");
x.t("subdivided","groups");
x.t("(optional)","dql");
x.t("(optional)","list");
x.t("(optional)","multi-level");
x.t("&cf","instead");
x.t("&cf","parameter\u2019s");
x.t("{application}","{table}");
x.t("{application}","application");
x.t("include","metric");
x.t("value","group");
x.t("value","metric");
x.t("value","causes");
x.t("ampersands","following");
x.t("(internalrecipients.person.domain)",".isinternal");
x.t("expression","defines");
x.t("computes","single");
x.t("computes","value");
x.t("q=lastname=smith","q=all");
x.t("query","via");
x.t("query","commands");
x.t("query","expression");
x.t("query","computes");
x.t("query","submit");
x.t("query","using");
x.t("defined","grouping");
x.t("examples","q=lastname=smith");
x.t("examples","f=tags");
x.t("single-","multi-level");
x.t("submit","parameters");
x.t("{params}","uri");
x.t("{params}","{application}");
x.t("application","name");
x.t("values","computed");
x.t("global","query");
x.t("called","composite");
x.t("perspective","table");
x.t("optionally","subdivided");
x.t("causes","extra");
x.t("separated","ampersands");
x.t("following","parameters");
x.t("corresponding","grouped");
x.t("corresponding","global");
x.t("special","feature");
x.t("(name)","m=sum");
x.t("using","uri");
x.t("using","&cf");
x.t("across","selected");
x.t("grouping","parameter");
x.t("grouping","list");
x.t("grouping","requested");
x.t("grouping","sets");
x.t("grouping","expressions");
x.t("grouping","levels");
x.t("levels","below");
x.t("levels","&cf");
x.t("m=average","(senddate)");
x.t("f=tags","f=top");
x.t("f=top","sender.person.department");
}
