function FileData_Pairs(x)
{
x.t("(rf=2)","configuration");
x.t("(rf=2)","holds");
x.t("provide","failure");
x.t("below","figure");
x.t("parameter","dbhost");
x.t("available","instance");
x.t("receives","rest");
x.t("shown","single");
x.t("full","redundancy");
x.t("background","worker");
x.t("instance","receives");
x.t("instance","doradus");
x.t("instance","local");
x.t("instance","fail");
x.t("instance","node");
x.t("instance","configuration");
x.t("replication","factor");
x.t("coordinate","schema");
x.t("deployment","guidelines");
x.t("deployment","least");
x.t("illustrated","below");
x.t("deploy","doradus");
x.t("basic","node");
x.t("distributes","requests");
x.t("providing","load");
x.t("distribute","background");
x.t("multiple","doradus");
x.t("doradus","instance");
x.t("doradus","distributes");
x.t("doradus","instances");
x.t("doradus","server");
x.t("single","doradus");
x.t("single","process");
x.t("doradus.yaml","parameter");
x.t("cassandra","configured");
x.t("cassandra","instances");
x.t("cassandra","nodes");
x.t("cassandra","server");
x.t("need","mirrored");
x.t("list","addresses");
x.t("complete","copy");
x.t("machine","failure");
x.t("jmx","requests");
x.t("fails","applications");
x.t("requires","cassandra");
x.t("guidelines","two");
x.t("addresses","subsequently");
x.t("tasks","coordinate");
x.t("mirrored","disks");
x.t("subsequently","doradus");
x.t("provides","full");
x.t("rest","commands");
x.t("local","disk");
x.t("defining","doradus.yaml");
x.t("2-node","configuration");
x.t("redundancy","protection");
x.t("request","sent");
x.t("configured","replication");
x.t("configured","connect");
x.t("commands","jmx");
x.t("supported","surviving");
x.t("disk","cassandra");
x.t("fail","services");
x.t("communicate","distribute");
x.t("cluster","rf=2");
x.t("cluster","peers");
x.t("cluster","typical");
x.t("rf=2","shown");
x.t("rf=2","multiple");
x.t("balancing","cassandra");
x.t("against","single");
x.t("requests","available");
x.t("requests","configured");
x.t("requests","nodes");
x.t("identical","data");
x.t("redundant","2-node");
x.t("redundant","node");
x.t("node","multiple");
x.t("node","fails");
x.t("node","requires");
x.t("node","cluster");
x.t("node","configuration");
x.t("node","configure");
x.t("node","run");
x.t("node","contains");
x.t("dbhost","list");
x.t("fully","redundant");
x.t("least","node");
x.t("least","two");
x.t("schema","changes");
x.t("worker","tasks");
x.t("peers","request");
x.t("configuration","provide");
x.t("configuration","deployment");
x.t("configuration","illustrated");
x.t("configuration","deploy");
x.t("configuration","need");
x.t("configuration","provides");
x.t("configuration","show");
x.t("configuration","two");
x.t("failure","fully");
x.t("failure","resiliency");
x.t("instances","defining");
x.t("instances","2-node");
x.t("instances","communicate");
x.t("instances","used");
x.t("disks","node");
x.t("figure","basic");
x.t("figure","fully");
x.t("holds","identical");
x.t("redirect","requests");
x.t("process","machine");
x.t("services","supported");
x.t("nodes","providing");
x.t("nodes","configured");
x.t("nodes","used");
x.t("show","below");
x.t("data","cassandra");
x.t("data","least");
x.t("typical","configuration");
x.t("configure","cassandra");
x.t("resiliency","production");
x.t("production","deployment");
x.t("protection","against");
x.t("two","node");
x.t("two","nodes");
x.t("factor","(rf=2)");
x.t("copy","data");
x.t("applications","redirect");
x.t("used","cluster");
x.t("used","node");
x.t("run","doradus");
x.t("surviving","node");
x.t("connect","cassandra");
x.t("load","balancing");
x.t("sent","instance");
x.t("server","instance");
x.t("contains","complete");
}
