function FileData_Pairs(x)
{
x.t("supports","tls");
x.t("protocols","cassandra");
x.t("protocols","data");
x.t("below","doradus");
x.t("provide","specific");
x.t("files","protocols");
x.t("files","unencrypted");
x.t("files","reside");
x.t("files","stored");
x.t("files","primary");
x.t("files","considered");
x.t("files","application");
x.t("/config","files");
x.t("various","folders");
x.t("source","found");
x.t("summary","best");
x.t("nature","protocol");
x.t("locations","error");
x.t("deployment","guidelines");
x.t("provided","below");
x.t("thrift","cql");
x.t("inter-node","communication");
x.t("center","communication");
x.t("best","practices");
x.t("log4j.properties","file");
x.t("however","high-volume");
x.t("require","authorization");
x.t("cross-data","center");
x.t("unencrypted","secured");
x.t("doradus","cassandra");
x.t("doradus","jmx");
x.t("doradus","rest");
x.t("doradus","configuration");
x.t("doradus","either");
x.t("access","cassandra");
x.t("doradus.yaml","file");
x.t("security","best");
x.t("cassandra","thrift");
x.t("cassandra","gossip");
x.t("cassandra","api");
x.t("cassandra","jmx");
x.t("cassandra","configuration");
x.t("cassandra","data");
x.t("file","locations");
x.t("file","log4j.properties");
x.t("file","doradus.yaml");
x.t("file","stored");
x.t("file","secondary");
x.t("file","cassandra.yaml");
x.t("reside","various");
x.t("found","data");
x.t("gossip","api");
x.t("practices","summary");
x.t("practices","deployment");
x.t("practices","security");
x.t("practices","securing");
x.t("api","inter-node");
x.t("api","cassandra");
x.t("api","jmx");
x.t("api","rest");
x.t("api","configured");
x.t("api","secured");
x.t("api","two");
x.t("jmx","api");
x.t("jmx","protocol");
x.t("recommended","except");
x.t("guidelines","security");
x.t("stored","cassandra");
x.t("stored","folder");
x.t("high-volume","nature");
x.t("communication","cassandra");
x.t("communication","protocol");
x.t("secondary","configuration");
x.t("/conf","files");
x.t("rest","api");
x.t("certificate","doradus");
x.t("configured","require");
x.t("configured","tls");
x.t("unauthorized","access");
x.t("error","reference");
x.t("securing","doradus");
x.t("tls","protocols");
x.t("tls","doradus");
x.t("tls","cassandra");
x.t("tls","encryption");
x.t("tls","(ssl)");
x.t("encrypt","data");
x.t("section","setting");
x.t("secured","unauthorized");
x.t("secured","authentication");
x.t("reference","source");
x.t("restrict","connections");
x.t("primary","doradus");
x.t("primary","cassandra");
x.t("folder","{cassandra_home}");
x.t("folder","{doradus_home}");
x.t("authorization","and/or");
x.t("and/or","tls");
x.t("and/or","encrypt");
x.t("encryption","however");
x.t("encryption","recommended");
x.t("configuration","files");
x.t("configuration","file");
x.t("cql","doradus");
x.t("specific","client-side");
x.t("(ssl)","restrict");
x.t("connections","provide");
x.t("authentication","and/or");
x.t("considered","sensitive");
x.t("{cassandra_home}","/conf");
x.t("client-side","certificate");
x.t("data","files");
x.t("data","provided");
x.t("data","file");
x.t("data","stored");
x.t("data","using");
x.t("sensitive","secured");
x.t("application","protocols");
x.t("application","data");
x.t("described","section");
x.t("{doradus_home}","/config");
x.t("two","application");
x.t("protocol","supports");
x.t("protocol","configured");
x.t("protocol","encryption");
x.t("either","protocol");
x.t("except","cross-data");
x.t("cassandra.yaml","file");
x.t("using","tls");
x.t("setting","cassandra");
x.t("folders","described");
}
