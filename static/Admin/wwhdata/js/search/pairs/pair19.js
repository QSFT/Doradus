function FileData_Pairs(x)
{
x.t("below","dual");
x.t("possible","cassandra");
x.t("hardware","recommended");
x.t("hardware","node");
x.t("hardware","recommendations");
x.t("drive","disk");
x.t("improved","bandwidth");
x.t("cpus","32gb");
x.t("cpus","described");
x.t("files","(2)");
x.t("files","depend");
x.t("files","resiliency");
x.t("sufficient","opposed");
x.t("static","address");
x.t("summarized","below");
x.t("required","node");
x.t("x86","based");
x.t("replication","configuring");
x.t("replication","coordination");
x.t("later","two");
x.t("deployment","guidelines");
x.t("provided","internode");
x.t("external","traffic");
x.t("(2)","software");
x.t("connection","replication");
x.t("i.e","drive");
x.t("virtualization","adds");
x.t("doradus","cluster");
x.t("servers","sufficient");
x.t("servers","recommended");
x.t("nic","dedicated");
x.t("nic","given");
x.t("size","number");
x.t("cassandra","connection");
x.t("cassandra","experts");
x.t("cassandra","data");
x.t("cassandra","commit");
x.t("outbound","traffic");
x.t("parallel","i/os");
x.t("opposed","high-end");
x.t("recommended","hardware");
x.t("recommended","doradus");
x.t("recommended","allow");
x.t("recommended","configured");
x.t("recommended","used");
x.t("traffic","nic");
x.t("traffic","node");
x.t("traffic","nodes");
x.t("traffic","applications");
x.t("large","size");
x.t("configuring","disks");
x.t("high-end","servers");
x.t("guidelines","hardware");
x.t("follows","disk");
x.t("follows","internode");
x.t("performance","penalty");
x.t("processors","cores");
x.t("virtual","cpus");
x.t("address","node");
x.t("address","nodes");
x.t("allow","parallel");
x.t("configured","follows");
x.t("configured","know");
x.t("hard","disks");
x.t("know","address");
x.t("disk","cassandra");
x.t("disk","operating");
x.t("experts","suggest");
x.t("minimum","hard");
x.t("minimum","two");
x.t("depend","volume");
x.t("number","disks");
x.t("cluster","nodes");
x.t("quad","core");
x.t("software","i.e");
x.t("software","configuration");
x.t("software","commit");
x.t("coordination","nic");
x.t("allocated","additional");
x.t("node","summarized");
x.t("node","nic");
x.t("node","configured");
x.t("node","added");
x.t("expected","minimum");
x.t("capacity","required");
x.t("added","disks");
x.t("dedicated","outbound");
x.t("dedicated","traffic");
x.t("adds","5-15");
x.t("memory","1gbit");
x.t("given","static");
x.t("operating","system");
x.t("effectively","using");
x.t("configuration","effectively");
x.t("core","xeon");
x.t("additional","data");
x.t("hosts","possible");
x.t("xeon","processors");
x.t("32gb","memory");
x.t("disks","cassandra");
x.t("disks","recommended");
x.t("disks","large");
x.t("disks","software");
x.t("disks","allocated");
x.t("disks","raid");
x.t("disks","used");
x.t("5-15","performance");
x.t("nodes","external");
x.t("nodes","cassandra");
x.t("nodes","commodity");
x.t("dual","quad");
x.t("data","files");
x.t("data","expected");
x.t("data","capacity");
x.t("resiliency","provided");
x.t("virtualized","hosts");
x.t("recommendations","hardware");
x.t("recommendations","deployment");
x.t("recommendations","server");
x.t("cores","virtual");
x.t("internode","replication");
x.t("internode","traffic");
x.t("raid","unnecessary");
x.t("described","later");
x.t("two","disks");
x.t("two","nics");
x.t("suggest","virtualization");
x.t("based","servers");
x.t("applications","minimum");
x.t("nics","recommended");
x.t("nics","hard");
x.t("used","cassandra");
x.t("used","follows");
x.t("system","software");
x.t("class","hardware");
x.t("using","cpus");
x.t("i/os","improved");
x.t("volume","data");
x.t("unnecessary","virtualized");
x.t("commodity","x86");
x.t("commit","log");
x.t("bandwidth","data");
x.t("log","disks");
x.t("server","class");
x.t("1gbit","nics");
}
