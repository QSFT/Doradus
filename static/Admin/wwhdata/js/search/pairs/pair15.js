function FileData_Pairs(x)
{
x.t("example","bulk");
x.t("example","wait");
x.t("example","dordusserver.stopserver");
x.t("example","string");
x.t("example","internal");
x.t("example","above");
x.t("example","doradusserver.shutdown");
x.t("passed","stopserver");
x.t("method","example");
x.t("method","accepts");
x.t("method","returns");
x.t("parameter","passed");
x.t("parameter","include");
x.t("parameter","default_services");
x.t("parameter","overrides");
x.t("doradusserver.startembedded","method");
x.t("doradusserver.startembedded","doradusserver.startembedded");
x.t("doradusserver.startembedded","installing");
x.t("doradusserver.startembedded","args");
x.t("full","services");
x.t("full","package");
x.t("description","optional");
x.t("always","initializes");
x.t("required","doradus.yaml");
x.t("instance","explicitly");
x.t("instance","doradus");
x.t("stopserver","example");
x.t("stopserver","string");
x.t("system.exit","parameter");
x.t("arguments","main");
x.t("until","connection");
x.t("until","olap");
x.t("until","schema");
x.t("provided","first");
x.t("explicitly","declare");
x.t("olapservice.class.getname","doradusserver.startembedded");
x.t("multiple","doradus");
x.t("multiple","storage");
x.t("connection","cassandra");
x.t("default","new");
x.t("needed","service");
x.t("doradus","always");
x.t("doradus","instance");
x.t("doradus","gracefully");
x.t("doradus","embedding");
x.t("doradus","olap");
x.t("doradus","initializing");
x.t("doradus","started");
x.t("doradus","executed");
x.t("doradus","instances");
x.t("doradus","application");
x.t("new","string");
x.t("new","applications");
x.t("bulk","load");
x.t("gracefully","shutdown");
x.t("embedding","doradus");
x.t("doradus.yaml","file");
x.t("file","parameter");
x.t("file","default_services");
x.t("cassandra","cluster");
x.t("cassandra","established");
x.t("installing","running");
x.t("initialized","started");
x.t("initialized","running");
x.t("initialized","note");
x.t("initialized","otherwise");
x.t("requested","requires");
x.t("requested","services");
x.t("accepts","second");
x.t("olap","ready");
x.t("olap","storage");
x.t("via","embedded");
x.t("declare","storage");
x.t("requires","standalone");
x.t("requires","services");
x.t("name","service");
x.t("wait","until");
x.t("wait","olapservice");
x.t("jvm","process");
x.t("soon","requested");
x.t("soon","internal");
x.t("initializing","storage");
x.t("dordusserver.stopserver","(null)");
x.t(".waitforfullserice","wait");
x.t("shutdown","method");
x.t("shutdown","calling");
x.t("shutdown","return");
x.t("shutdown","call");
x.t("shutdown","terminate");
x.t("alternatively","doradus");
x.t("rest","task");
x.t("started","addition");
x.t("started","services");
x.t("started","startembedded");
x.t("started","service");
x.t("string","olapservice.class.getname");
x.t("string","specifies");
x.t("string","ignored");
x.t("string","services");
x.t("string","args");
x.t("string","-restport");
x.t("sets","example");
x.t("addition","runtime");
x.t("second","string");
x.t("throw","runtimeexception");
x.t("first","becomes");
x.t("initializes","schema");
x.t("standalone","instance");
x.t("cluster","different");
x.t("specifies","optional");
x.t("may","requested");
x.t("may","immediately");
x.t("different","service");
x.t("starting","given");
x.t("waitforfullservice","method");
x.t("olapservice.instance",".waitforfullserice");
x.t("internal","database");
x.t("internal","services");
x.t("5711","string");
x.t("calling","stopserver");
x.t("calling","shutdown");
x.t("task","manager");
x.t("executed","full");
x.t("launched","cassandra");
x.t("return","alternatively");
x.t("(null)","gracefully");
x.t("given","optional");
x.t("schema","services");
x.t("schema","service");
x.t("option","description");
x.t("least","storage");
x.t("ready","example");
x.t("ready","until");
x.t("ready","olapservice.instance");
x.t("ready","ensure");
x.t("ready","application");
x.t("ready","note");
x.t("database","service");
x.t("embedded","doradus");
x.t("ensure","needed");
x.t("include","full");
x.t("instances","launched");
x.t("running","doradus");
x.t("main","method");
x.t("manager","optional");
x.t("process","calling");
x.t("services","example");
x.t("services","parameter");
x.t("services","required");
x.t("services","provided");
x.t("services","new");
x.t("services","doradus");
x.t("services","initialized");
x.t("services","started");
x.t("services","may");
x.t("services","ready");
x.t("services","returns");
x.t("default_services","starting");
x.t("default_services","option");
x.t("although","startembedded");
x.t("established","until");
x.t("optional","services");
x.t("becomes","default");
x.t("runtimeexception","multiple");
x.t("application","doradusserver.startembedded");
x.t("application","call");
x.t("application","embed");
x.t("runtime","arguments");
x.t("args","new");
x.t("args","services");
x.t("above","starts");
x.t("note","multiple");
x.t("note","doradus");
x.t("otherwise","startembedded");
x.t("applications","created");
x.t("doradusserver.shutdown","gracefully");
x.t("package","name");
x.t("startembedded","method");
x.t("startembedded","throw");
x.t("startembedded","returns");
x.t("created","via");
x.t("immediately","ready");
x.t("call","system.exit");
x.t("call","waitforfullservice");
x.t("starts","doradus");
x.t("storage","services");
x.t("storage","service");
x.t("service","initialized");
x.t("service","requires");
x.t("service","rest");
x.t("service","sets");
x.t("service","may");
x.t("service","least");
x.t("service","ready");
x.t("service","although");
x.t("service","storage");
x.t("terminate","jvm");
x.t("returns","requested");
x.t("returns","soon");
x.t("returns","services");
x.t("overrides","doradus.yaml");
x.t("-restport","5711");
x.t("load","application");
x.t("olapservice","ready");
x.t("embed","doradus");
}
