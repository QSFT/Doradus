function FileData_Pairs(x)
{
x.t("passed","parameters");
x.t("decrease","time");
x.t("active","sstables");
x.t("parameter","worth");
x.t("parameter","interacts");
x.t("parameter","controls");
x.t("parameter","used");
x.t("gc_grace_seconds","3600");
x.t("gc_grace_seconds","value");
x.t("available","machine");
x.t("available","system");
x.t("compression","specified");
x.t("compression","disabled");
x.t("compression","threads");
x.t("day","causes");
x.t("files","hold");
x.t("files","configuration");
x.t("sstable_compression","empty");
x.t("indented","olap");
x.t("indented","begin");
x.t("within","shard");
x.t("moreover","consume");
x.t("table","olap_cf_defaults");
x.t("create","olap");
x.t("create","data");
x.t("columnfamily","parameters");
x.t("columnfamily","olap_merge_threads");
x.t("columnfamily","already");
x.t("columnfamily","created");
x.t("queued","compression");
x.t("storing","cassandra");
x.t("storing","cassanda");
x.t("tables","called");
x.t("field","cache");
x.t("cache","value");
x.t("uses","virtual");
x.t("modified","match");
x.t("missed","however");
x.t("memory-mapped","(mmap-ed)");
x.t("older","fields");
x.t("lots","time");
x.t("deletes","rows");
x.t("86400","day");
x.t("sub-parameters","further");
x.t("hence","compression");
x.t("time","needed");
x.t("time","failed");
x.t("merges","shard");
x.t("merges","data");
x.t("total","size");
x.t("cached","search");
x.t("cached","data");
x.t("cached","result");
x.t("multiple","threads");
x.t("however","olap");
x.t("however","value");
x.t("however","balanced");
x.t("retained","data");
x.t("text","values");
x.t("automatically","compresses");
x.t("default","864,000");
x.t("default","value");
x.t("needed","merge");
x.t("doradus","automatically");
x.t("doradus","configuration");
x.t("certain","types");
x.t("new","database");
x.t("details","values");
x.t("single","thread");
x.t("highlighting","olap");
x.t("tombstones","retained");
x.t("tombstones","deleted");
x.t("doradus.yaml","olap");
x.t("size","most-recently-used");
x.t("size","megabytes");
x.t("file","caching");
x.t("cassandra","parameter");
x.t("cassandra","accepted");
x.t("cassandra","cause");
x.t("cassandra","documentation");
x.t("cassandra","olap_compression_threads");
x.t("parallel","increasing");
x.t("machine","olap_compression_threads");
x.t("during","compaction");
x.t("results","cached");
x.t("olap_cf_defaults","compression_options");
x.t("large","olap");
x.t("recommended","olap");
x.t("olap","columnfamily");
x.t("olap","uses");
x.t("olap","file");
x.t("olap","parameters");
x.t("olap","shards");
x.t("olap","somewhere");
x.t("olap","columnfamily\u2019s");
x.t("olap","service");
x.t("most-recently-used","field");
x.t("writing","cassandra");
x.t("specified","number");
x.t("cycle","default");
x.t("operation","doradus");
x.t("operation","olap");
x.t("enables","olap");
x.t("enables","recent");
x.t("follows","olap_merge_threads");
x.t("olap_cache_size_mb","100");
x.t("virtual","files");
x.t("processors","available");
x.t("parameters","indented");
x.t("parameters","doradus");
x.t("parameters","doradus.yaml");
x.t("parameters","cassandra");
x.t("parameters","olap");
x.t("parameters","parameters");
x.t("parameters","control");
x.t("parameters","recognized");
x.t("parameters","olap_query_cache_size_mb");
x.t("none","gc_grace_seconds");
x.t("further","indented");
x.t("exists","modified");
x.t("provides","lots");
x.t("un-loaded","memory");
x.t("megabytes","cached");
x.t("search","results");
x.t("segments","queued");
x.t("segments","writing");
x.t("fields","un-loaded");
x.t("sets","total");
x.t("empty","string");
x.t("string","none");
x.t("started","new");
x.t("thread","merges");
x.t("thread","olap_merge_threads");
x.t("thread","(s)");
x.t("thread","used");
x.t("recent","query");
x.t("accepted","passed");
x.t("begin","sub-parameters");
x.t("shards","however");
x.t("store","data");
x.t("failed","node");
x.t("raw","scalar");
x.t("queries","value");
x.t("hold","raw");
x.t("disk","space");
x.t("excessive","memory");
x.t("somewhere","3600");
x.t("first","started");
x.t("means","single");
x.t("long","deleted");
x.t("truly","deleted");
x.t("space","moreover");
x.t("space","reducing");
x.t("smaller","gc_grace_seconds");
x.t("control","operation");
x.t("number","processors");
x.t("number","asynchronous");
x.t("number","cores");
x.t("number","threads");
x.t("cause","excessive");
x.t("scalar","values");
x.t("shard","default");
x.t("shard","rows");
x.t("shard","data");
x.t("shard","caching");
x.t("recover","learn");
x.t("deletions","may");
x.t("may","missed");
x.t("types","queries");
x.t("match","parameters");
x.t("864,000","seconds");
x.t("node","recover");
x.t("rows","merges");
x.t("rows","called");
x.t("rows","consume");
x.t("disabled","olap");
x.t("compress","data");
x.t("worth","highlighting");
x.t("100","parameter");
x.t("100","value");
x.t("memory","active");
x.t("memory","size");
x.t("memory","usage");
x.t("memory","olap_file_cache_size_mb");
x.t("database","certain");
x.t("database","olap");
x.t("affect","shard");
x.t("olap_merge_threads","parameter");
x.t("olap_merge_threads","follows");
x.t("olap_merge_threads","number");
x.t("olap_merge_threads","olap_compression_threads");
x.t("sstables","memory-mapped");
x.t("sstables","truly");
x.t("documentation","details");
x.t("quickly","freeing-up");
x.t("olap_compression_threads","parameter");
x.t("olap_compression_threads","single");
x.t("olap_compression_threads","significantly");
x.t("olap_compression_threads","merge");
x.t("configuration","files");
x.t("configuration","operation");
x.t("configuration","parameters");
x.t("value","multiple");
x.t("value","recommended");
x.t("value","means");
x.t("value","affect");
x.t("value","significantly");
x.t("value","non-zero");
x.t("value","controls");
x.t("value","used");
x.t("value","exceeded");
x.t("3600","parameter");
x.t("3600","hour");
x.t("interacts","olap_merge_threads");
x.t("usage","smaller");
x.t("already","exists");
x.t("balanced","number");
x.t("balanced","olap_merge_threads");
x.t("round-trips","database");
x.t("takes","bit");
x.t("(s)","create");
x.t("data","within");
x.t("data","storing");
x.t("data","tables");
x.t("data","parallel");
x.t("data","olap");
x.t("data","segments");
x.t("data","thread");
x.t("data","value");
x.t("data","compresses");
x.t("data","prevents");
x.t("query","result");
x.t("cassanda","hence");
x.t("freeing-up","disk");
x.t("defined","parameters");
x.t("result","takes");
x.t("result","caching");
x.t("bit","per");
x.t("increasing","value");
x.t("values","text");
x.t("values","note");
x.t("values","caching");
x.t("compresses","segments");
x.t("compresses","data");
x.t("significantly","decrease");
x.t("asynchronous","compression");
x.t("cores","available");
x.t("columnfamily\u2019s","gc_grace_seconds");
x.t("compression_options","sstable_compression");
x.t("called","tombstones");
x.t("called","sstables");
x.t("reducing","memory");
x.t("note","doradus");
x.t("prevents","round-trips");
x.t("controls","long");
x.t("controls","number");
x.t("controls","memory");
x.t("non-zero","enables");
x.t("created","server");
x.t("merge","large");
x.t("merge","thread");
x.t("merge","shards");
x.t("merge","store");
x.t("merge","shard");
x.t("merge","data");
x.t("causes","tombstones");
x.t("service","deletes");
x.t("service","olap_cache_size_mb");
x.t("caching","sets");
x.t("caching","data");
x.t("caching","defined");
x.t("used","create");
x.t("used","compress");
x.t("used","balanced");
x.t("used","merge");
x.t("system","parameter");
x.t("recognized","cassandra");
x.t("setting","olap_compression_threads");
x.t("hour","86400");
x.t("per","object");
x.t("deleted","during");
x.t("deleted","rows");
x.t("deleted","quickly");
x.t("olap_query_cache_size_mb","100");
x.t("compaction","cycle");
x.t("days","provides");
x.t("olap_file_cache_size_mb","100");
x.t("learn","deletions");
x.t("consume","disk");
x.t("consume","memory");
x.t("(mmap-ed)","cassandra");
x.t("exceeded","older");
x.t("object","table");
x.t("server","first");
x.t("threads","used");
x.t("threads","setting");
x.t("seconds","days");
}
