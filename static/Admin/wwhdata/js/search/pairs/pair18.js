function FileData_Pairs(x)
{
x.t("(rf=2)","although");
x.t("supports","multi-data");
x.t("deployments","cassandra");
x.t("centers","geographically");
x.t("example","multi-rack/multi-data");
x.t("below","single");
x.t("below","fully");
x.t("below","figure");
x.t("below","using");
x.t("available","instance");
x.t("files","reside");
x.t("files","minimal");
x.t("independently","powered");
x.t("shown","below");
x.t("failover","case");
x.t("background","worker");
x.t("various","data");
x.t("instance","required");
x.t("instance","execute");
x.t("instance","single");
x.t("instance","doradus");
x.t("instance","node");
x.t("required","running");
x.t("ensures","maximum");
x.t("components","components");
x.t("components","application");
x.t("components","used");
x.t("replication","elasticity");
x.t("replication","policy");
x.t("replication","factor");
x.t("execute","node");
x.t("uses","jmx");
x.t("uses","two");
x.t("coordinate","schema");
x.t("deployment","shown");
x.t("deployment","uses");
x.t("deployment","consists");
x.t("deployment","advanced");
x.t("deployment","guidelines");
x.t("deployment","options");
x.t("illustrated","below");
x.t("thrift","api");
x.t("center","deployments");
x.t("center","independently");
x.t("center","awareness");
x.t("center","deployment");
x.t("center","assignment");
x.t("center","fail");
x.t("awareness","cassandra");
x.t("basic","components");
x.t("basic","doradus");
x.t("distribute","background");
x.t("however","applications");
x.t("multiple","doradus");
x.t("doradus","instance");
x.t("doradus","components");
x.t("doradus","uses");
x.t("doradus","illustrated");
x.t("doradus","jvm");
x.t("doradus","component");
x.t("doradus","rest");
x.t("doradus","configuration");
x.t("doradus","instances");
x.t("doradus","nodes");
x.t("doradus","executes");
x.t("doradus","server");
x.t("objects","submit");
x.t("consists","single");
x.t("single","doradus");
x.t("single","cassandra");
x.t("single","node");
x.t("advanced","configurations");
x.t("doradus.yaml","file");
x.t("usually","network-near");
x.t("configurations","beyond");
x.t("document","information");
x.t("cassandra","supports");
x.t("cassandra","instance");
x.t("cassandra","replication");
x.t("cassandra","stores");
x.t("cassandra","node");
x.t("cassandra","configuration");
x.t("cassandra","using");
x.t("cassandra","server");
x.t("file","cassandra");
x.t("file","primary");
x.t("reside","mirrored");
x.t("complete","failover");
x.t("assignment","rack");
x.t("api","doradus");
x.t("api","doradus.yaml");
x.t("api","cql");
x.t("api","monitor");
x.t("multi-rack/multi-data","center");
x.t("jmx","api");
x.t("jmx","functions");
x.t("jmx","application");
x.t("fails","configuration");
x.t("fails","applications");
x.t("availability","node");
x.t("deploying","doradus");
x.t("directly","monitor");
x.t("guidelines","deployment");
x.t("jvm","call");
x.t("tasks","coordinate");
x.t("perform","schema");
x.t("component","processes");
x.t("provides","complete");
x.t("provides","persistence");
x.t("mirrored","raid");
x.t("rest","api");
x.t("entire","data");
x.t("resource","usage");
x.t("functions","doradus");
x.t("request","sent");
x.t("rack","usually");
x.t("rack","entire");
x.t("rack","data");
x.t("queries","using");
x.t("commands","maps");
x.t("configured","specific");
x.t("options","deployment");
x.t("options","basic");
x.t("cassandra\u2019s","primary");
x.t("fail","example");
x.t("standalone","process");
x.t("communicate","distribute");
x.t("network-near","racks");
x.t("cluster","rf=2");
x.t("cluster","peers");
x.t("powered","data");
x.t("maximum","availability");
x.t("processes","commands");
x.t("rf=2","multiple");
x.t("requests","available");
x.t("requests","cassandra");
x.t("stores","data");
x.t("racks","data");
x.t("changes","cassandra");
x.t("changes","update");
x.t("internal","services");
x.t("jconsole","used");
x.t("redundant","node");
x.t("node","fails");
x.t("node","rack");
x.t("node","configured");
x.t("node","cluster");
x.t("node","configuration");
x.t("node","multi-data");
x.t("node","minimal");
x.t("scope","document");
x.t("client","applications");
x.t("primary","doradus");
x.t("primary","configuration");
x.t("level","protection");
x.t("fully","redundant");
x.t("publicly","available");
x.t("schema","changes");
x.t("persistence","replication");
x.t("database","services");
x.t("worker","tasks");
x.t("peers","request");
x.t("geographically","dispersed");
x.t("dispersed","rack");
x.t("cql","api");
x.t("configuration","illustrated");
x.t("configuration","file");
x.t("configuration","publicly");
x.t("configuration","robust");
x.t("configuration","comes");
x.t("instances","communicate");
x.t("instances","used");
x.t("usage","jmx");
x.t("core","doradus");
x.t("core","cassandra");
x.t("running","doradus");
x.t("figure","basic");
x.t("disks","depicted");
x.t("redirect","requests");
x.t("specific","rack");
x.t("process","however");
x.t("elasticity","database");
x.t("services","directly");
x.t("services","cassandra\u2019s");
x.t("although","doradus");
x.t("nodes","replication");
x.t("nodes","provides");
x.t("data","centers");
x.t("data","various");
x.t("data","center");
x.t("data","log");
x.t("depicted","below");
x.t("multi-data","center");
x.t("information","cassandra");
x.t("protection","data");
x.t("robust","deployment");
x.t("application","doradus");
x.t("application","jconsole");
x.t("application","client");
x.t("submit","queries");
x.t("monitor","application");
x.t("monitor","server");
x.t("raid","disks");
x.t("case","either");
x.t("policy","ensures");
x.t("maps","requests");
x.t("beyond","scope");
x.t("executes","standalone");
x.t("two","nodes");
x.t("applications","perform");
x.t("applications","redirect");
x.t("applications","embed");
x.t("comes","cassandra.yaml");
x.t("factor","(rf=2)");
x.t("call","internal");
x.t("used","doradus");
x.t("used","cluster");
x.t("used","invoke");
x.t("either","thrift");
x.t("either","node");
x.t("cassandra.yaml","file");
x.t("model","deploying");
x.t("using","doradus");
x.t("using","either");
x.t("using","model");
x.t("minimal","deployment");
x.t("minimal","level");
x.t("invoke","jmx");
x.t("embed","doradus");
x.t("log","files");
x.t("sent","instance");
x.t("update","objects");
x.t("server","provides");
x.t("server","resource");
x.t("server","core");
}
