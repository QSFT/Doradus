function FileData_Pairs(x)
{
x.t("example","dordusserver.stopserver");
x.t("example","string");
x.t("example","import");
x.t("example","doradusserver.shutdown");
x.t("example","overrides");
x.t("example","direct-load");
x.t("passed","stopserver");
x.t("passed","services");
x.t("method","example");
x.t("method","accepts");
x.t("method","startembedded");
x.t("method","returns");
x.t("method","passing");
x.t("parameter","passed");
x.t("parameter","full");
x.t("parameter","least");
x.t("parameter","main");
x.t("parameter","restport");
x.t("parameter","starts");
x.t("receives","shutdown");
x.t("doradusserver.startembedded","args");
x.t("full","services");
x.t("full","package");
x.t("static","main");
x.t("system.exit","parameter");
x.t("system.exit","called");
x.t("always","initializes");
x.t("required","internal");
x.t("layer","schema");
x.t("instance","explicitly");
x.t("instance","doradus");
x.t("stopserver","example");
x.t("stopserver","string");
x.t("arguments","example");
x.t("until","process");
x.t("provided","first");
x.t("restservice.class.getname","doradusserver.startembedded");
x.t("explicitly","declare");
x.t("storage_services","configured");
x.t("however","main");
x.t("olapservice.class.getname","restservice.class.getname");
x.t("regardless","services");
x.t("multiple","doradus");
x.t("multiple","storage");
x.t("default","new");
x.t("doradus","always");
x.t("doradus","instance");
x.t("doradus","gracefully");
x.t("doradus","embedding");
x.t("doradus","olap");
x.t("doradus","jvm");
x.t("doradus","initializing");
x.t("doradus","started");
x.t("doradus","executed");
x.t("doradus","instances");
x.t("doradus","application");
x.t("doradus","starts");
x.t("want","embed");
x.t("new","string");
x.t("new","applications");
x.t("gracefully","shutdown");
x.t("embedding","doradus");
x.t("doradus.yaml","parameter");
x.t("doradus.yaml","however");
x.t("doradus.yaml","file");
x.t("initialization","services");
x.t("file","list");
x.t("list","optional");
x.t("cassandra","cluster");
x.t("installing","running");
x.t("initialized","regardless");
x.t("initialized","started");
x.t("initialized","running");
x.t("initialized","otherwise");
x.t("requested","doradus");
x.t("requested","services");
x.t("accepts","args");
x.t("selective","initialization");
x.t("olap","storage");
x.t("via","doradus");
x.t("declare","storage");
x.t("requires","stand-alone");
x.t("jvm","process");
x.t("name","service");
x.t("soon","requested");
x.t("soon","internal");
x.t("initializing","storage");
x.t("dordusserver.stopserver","(null)");
x.t("provides","runtime");
x.t("com.dell.doradus.core.doradusserver","string");
x.t("shutdown","method");
x.t("shutdown","signal");
x.t("shutdown","calling");
x.t("shutdown","return");
x.t("shutdown","call");
x.t("shutdown","terminate");
x.t("alternatively","doradus");
x.t("plus","second");
x.t("(args)","example");
x.t("allows","selective");
x.t("rest","service");
x.t("stand-alone","instance");
x.t("string","olapservice.class.getname");
x.t("string","provides");
x.t("string","allows");
x.t("string","ignored");
x.t("string","services");
x.t("string","args");
x.t("string","-restport");
x.t("started","method");
x.t("started","startembedded");
x.t("sets","example");
x.t("second","string");
x.t("configured","doradus.yaml");
x.t("throw","runtimeexception");
x.t("first","becomes");
x.t("initializes","required");
x.t("signal","e.g");
x.t("cluster","different");
x.t("may","want");
x.t("may","requested");
x.t("different","service");
x.t("internal","services");
x.t("5711","string");
x.t("5711","main");
x.t("5711","doradusserver.main");
x.t("calling","stopserver");
x.t("calling","shutdown");
x.t("task","manager");
x.t("executed","full");
x.t("return","until");
x.t("return","alternatively");
x.t("launched","cassandra");
x.t("(null)","gracefully");
x.t("persistence","layer");
x.t("schema","service");
x.t("least","storage");
x.t("e.g","ctrl-c");
x.t("instances","launched");
x.t("running","doradus");
x.t("main","method");
x.t("main","plus");
x.t("main","return");
x.t("main","called");
x.t("ctrl-c","system.exit");
x.t("process","receives");
x.t("process","calling");
x.t("process","call");
x.t("import","com.dell.doradus.core.doradusserver");
x.t("restport","parameter");
x.t("restport","setting");
x.t("manager","service");
x.t("services","example");
x.t("services","parameter");
x.t("services","provided");
x.t("services","storage_services");
x.t("services","new");
x.t("services","doradus");
x.t("services","initialized");
x.t("services","requested");
x.t("services","may");
x.t("services","task");
x.t("services","service");
x.t("optional","services");
x.t("becomes","default");
x.t("runtimeexception","multiple");
x.t("application","embedding");
x.t("application","installing");
x.t("application","applications");
x.t("application","embed");
x.t("runtime","arguments");
x.t("args","parameter");
x.t("args","new");
x.t("args","services");
x.t("called","doradus");
x.t("called","alternatively");
x.t("otherwise","startembedded");
x.t("note","multiple");
x.t("applications","may");
x.t("applications","created");
x.t("doradusserver.shutdown","gracefully");
x.t("call","static");
x.t("call","system.exit");
x.t("startembedded","method");
x.t("startembedded","throw");
x.t("startembedded","returns");
x.t("package","name");
x.t("created","via");
x.t("starts","doradus");
x.t("starts","internal");
x.t("storage","services");
x.t("storage","service");
x.t("service","passed");
x.t("service","doradus.yaml");
x.t("service","initialized");
x.t("service","requires");
x.t("service","rest");
x.t("service","sets");
x.t("service","persistence");
x.t("service","optional");
x.t("service","note");
x.t("terminate","jvm");
x.t("setting","5711");
x.t("overrides","doradus.yaml");
x.t("overrides","restport");
x.t("returns","soon");
x.t("-restport","5711");
x.t("doradusserver.main","(args)");
x.t("direct-load","application");
x.t("embed","doradus");
x.t("passing","string");
}
