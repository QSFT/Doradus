function FileData_Pairs(x)
{
x.t("mart","database");
x.t("complex","analytical");
x.t("complex","specialized");
x.t("supports","complex");
x.t("included","queries");
x.t("searching","path");
x.t("example","olap");
x.t("extract/transform/load","(etl)");
x.t("available","expire");
x.t("advantages","doradus");
x.t("applied","shard");
x.t("full","text");
x.t("full","doradus");
x.t("full","referential");
x.t("embeds","doradus");
x.t("dql","features");
x.t("dql","used");
x.t("few","minutes");
x.t("tables","fields");
x.t("tables","facilitate");
x.t("searched","parallel");
x.t("analyzed","traditional");
x.t("support","technology");
x.t("anomalies","perform");
x.t("evolution","application\u2019s");
x.t("times","large");
x.t("aging","available");
x.t("time","updates");
x.t("time","allowing");
x.t("time","instead");
x.t("however","traditional");
x.t("detect","trends");
x.t("etl","times");
x.t("etl","processes");
x.t("text","searching");
x.t("speed","object");
x.t("doradus","olap");
x.t("doradus","provides");
x.t("doradus","stores");
x.t("doradus","process");
x.t("doradus","data");
x.t("doradus","query");
x.t("access","techniques");
x.t("updates","applied");
x.t("new","tables");
x.t("new","data");
x.t("link","fields");
x.t("objects","less");
x.t("objects","values");
x.t("objects","per");
x.t("relationship","searches");
x.t("advanced","search");
x.t("amounts","data");
x.t("indexes","multi-shard");
x.t("referential","integrity");
x.t("parallel","space");
x.t("expire","old");
x.t("results","detect");
x.t("overview","olap");
x.t("large","amounts");
x.t("large","disk");
x.t("large","object");
x.t("oltp","databases");
x.t("features","include");
x.t("features","query");
x.t("olap","supports");
x.t("olap","advantages");
x.t("olap","olap");
x.t("olap","numerous");
x.t("olap","optimized");
x.t("olap","database");
x.t("olap","event");
x.t("olap","online");
x.t("olap","data");
x.t("olap","load");
x.t("million","objects/second");
x.t("via","link");
x.t("wide","range");
x.t("range","statistical");
x.t("path","expressions");
x.t("organizes","data");
x.t("numerous","drawbacks");
x.t("searches","multi-level");
x.t("changed","time");
x.t("aggregate","results");
x.t("aggregate","queries");
x.t("perform","statistical");
x.t("perform","analyses");
x.t("consumption","complex");
x.t("millions","objects");
x.t("old","data");
x.t("undergoes","extract/transform/load");
x.t("overcome","drawbacks");
x.t("provides","full");
x.t("statistical","queries");
x.t("statistical","computations");
x.t("find","data");
x.t("loaded","quickly");
x.t("optimized","shard");
x.t("decision","support");
x.t("allows","large");
x.t("allows","wide");
x.t("allows","queries");
x.t("search","features");
x.t("fields","doradus");
x.t("fields","added");
x.t("integrity","bi-directional");
x.t("sets","dql");
x.t("second","without");
x.t("techniques","overcome");
x.t("allowing","new");
x.t("queries","searched");
x.t("queries","new");
x.t("queries","perform");
x.t("queries","shard");
x.t("queries","retrieve");
x.t("queries","include");
x.t("queries","process");
x.t("queries","employs");
x.t("queries","structure");
x.t("queries","compute");
x.t("queries","merged");
x.t("disk","space");
x.t("automatic","data");
x.t("databases","sources");
x.t("long","etl");
x.t("space","consumption");
x.t("space","schema");
x.t("space","usage");
x.t("schemas","doradus");
x.t("processing","decision");
x.t("minutes","live");
x.t("transitive","relationship");
x.t("placing","data");
x.t("time-oriented","dimension");
x.t("shard","included");
x.t("shard","allows");
x.t("shard","merging");
x.t("shard","merged");
x.t("shard","visible");
x.t("retrieve","specific");
x.t("computations","across");
x.t("multi-shard","queries");
x.t("unique","storage");
x.t("processes","data");
x.t("expressions","quantifiers");
x.t("instead","long");
x.t("language","dql");
x.t("stores","billion");
x.t("stores","data");
x.t("application\u2019s","schema");
x.t("format","compress");
x.t("dimension","tables");
x.t("added","automatic");
x.t("added","shard");
x.t("2gb","disk");
x.t("analyses","however");
x.t("multi-level","grouping");
x.t("compress","example");
x.t("database","overview");
x.t("database","process");
x.t("merging","typically");
x.t("schema","evolution");
x.t("schema","changed");
x.t("quickly","application");
x.t("event","application");
x.t("less","2gb");
x.t("technology","allows");
x.t("sources","typically");
x.t("trends","find");
x.t("include","full");
x.t("include","live");
x.t("usage","doradus");
x.t("analytical","queries");
x.t("analytical","processing");
x.t("drawbacks","traditional");
x.t("drawbacks","including");
x.t("specific","objects");
x.t("process","organizes");
x.t("process","millions");
x.t("process","placing");
x.t("process","load");
x.t("quantifiers","transitive");
x.t("subject-based","analytical");
x.t("live","data");
x.t("online","analytical");
x.t("employs","unique");
x.t("billion","objects");
x.t("data","mart");
x.t("data","analyzed");
x.t("data","anomalies");
x.t("data","aging");
x.t("data","oltp");
x.t("data","million");
x.t("data","loaded");
x.t("data","queries");
x.t("data","time-oriented");
x.t("data","added");
x.t("data","model");
x.t("data","warehouse");
x.t("data","feeds");
x.t("data","columnar");
x.t("(etl)","process");
x.t("facilitate","subject-based");
x.t("query","speed");
x.t("query","language");
x.t("traditional","olap");
x.t("application","embeds");
x.t("application","stores");
x.t("values","aggregate");
x.t("structure","allows");
x.t("specialized","schemas");
x.t("typically","undergoes");
x.t("typically","seconds");
x.t("applications","full");
x.t("merge","time");
x.t("navigation","link");
x.t("compute","aggregate");
x.t("storage","access");
x.t("objects/second","merge");
x.t("corresponding","shard");
x.t("model","applications");
x.t("model","including");
x.t("relationships","via");
x.t("used","object");
x.t("bi-directional","navigation");
x.t("bi-directional","relationships");
x.t("warehouse","data");
x.t("feeds","data");
x.t("across","large");
x.t("grouping","advanced");
x.t("per","second");
x.t("load","time");
x.t("load","data");
x.t("merged","olap");
x.t("merged","corresponding");
x.t("without","indexes");
x.t("including","long");
x.t("including","bi-directional");
x.t("columnar","format");
x.t("visible","queries");
x.t("seconds","few");
x.t("object","aggregate");
x.t("object","sets");
x.t("object","queries");
}
