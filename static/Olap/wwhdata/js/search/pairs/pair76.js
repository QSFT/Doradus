function FileData_Pairs(x)
{
x.t("example","json");
x.t("email/message/_query","q=size");
x.t("parameter","selects");
x.t("q=size","10000");
x.t("exist","merged");
x.t("latest","live");
x.t("applied","however");
x.t("applied","live");
x.t("table","multiple");
x.t("once","object");
x.t("having","wait");
x.t("batches","applied");
x.t("batches","add");
x.t("batches","adding");
x.t("field","indicates");
x.t("/pz/q4jf8rc2hk9cg08ta==","_shard");
x.t("essentially","query");
x.t("batch","deletes");
x.t("batch","acts");
x.t("deletes","object");
x.t("unmerged","batches");
x.t("unmerged","batch");
x.t("hence","multi-value");
x.t("delete","applied");
x.t("multiple","shards");
x.t("however","given");
x.t("however","update");
x.t("single","multi-shard");
x.t("objects","multiple");
x.t("objects","selected");
x.t("objects","returned");
x.t("objects","beneficial");
x.t("updates","link");
x.t("updates","reflected");
x.t("link","updates");
x.t("new","objects");
x.t("includes","latest");
x.t("includes","unmerged");
x.t("includes","object");
x.t("self-contained","database");
x.t("indicates","objects");
x.t("indicates","shard");
x.t("add","new");
x.t("results","totalobjects");
x.t("selects","shard");
x.t("duplicate","ids");
x.t("olap","object");
x.t("range","shards");
x.t("wait","underlying");
x.t("&uncommitted=true","unmerged");
x.t("&uncommitted=true","results");
x.t("_id","/pz/q4jf8rc2hk9cg08ta==");
x.t("_id","/wquby1wsgtb7zjpkyf7w==");
x.t("&range=","&uncommitted=true");
x.t("/wquby1wsgtb7zjpkyf7w==","_shard");
x.t("shards","parameter");
x.t("shards","however");
x.t("shards","single");
x.t("shards","query");
x.t("shards","including");
x.t("selected","example");
x.t("selected","across");
x.t("queries","olap");
x.t("queries","multi-shard");
x.t("queries","object");
x.t("occurs","query");
x.t("acts","mini");
x.t("select","objects");
x.t("10000","&range=");
x.t("underlying","shard");
x.t("multi-shard","uncommitted");
x.t("multi-shard","query");
x.t("shard","objects");
x.t("shard","includes");
x.t("shard","called");
x.t("shard","analogous");
x.t("shard","corresponding");
x.t("shard","merged");
x.t("scalar","updates");
x.t("reflected","update");
x.t("may","inserted");
x.t("returned","once");
x.t("returned","shards");
x.t("returned","_shard");
x.t("returned","query");
x.t("furthermore","update");
x.t("ids","returned");
x.t("ids","already");
x.t("ids","object");
x.t("database","object");
x.t("given","may");
x.t("given","object");
x.t("option","&uncommitted=true");
x.t("mini","shard");
x.t("whose","range");
x.t("totalobjects","field");
x.t("totalobjects","docs");
x.t("amount","duplicate");
x.t("include","uncommitted");
x.t("uncommitted","data");
x.t("_shard","field");
x.t("_shard","2015-01-01");
x.t("_shard","2015-01-02");
x.t("docs","doc");
x.t("similar","process");
x.t("multi-value","scalar");
x.t("already","exist");
x.t("process","occurs");
x.t("live","shard");
x.t("live","data");
x.t("live","object");
x.t("data","essentially");
x.t("data","queries");
x.t("data","without");
x.t("query","includes");
x.t("query","shard");
x.t("query","furthermore");
x.t("query","whose");
x.t("query","result");
x.t("query","therefore");
x.t("inserted","table");
x.t("doc","_id");
x.t("beneficial","include");
x.t("result","totalobjects");
x.t("called","multi-shard");
x.t("json","email/message/_query");
x.t("2015-01-01","doc");
x.t("analogous","self-contained");
x.t("corresponding","object");
x.t("2015-01-02","similar");
x.t("across","shards");
x.t("adding","option");
x.t("therefore","select");
x.t("merged","live");
x.t("without","having");
x.t("including","duplicate");
x.t("object","hence");
x.t("object","delete");
x.t("object","selected");
x.t("object","queries");
x.t("object","returned");
x.t("object","ids");
x.t("object","given");
x.t("object","amount");
x.t("object","query");
x.t("update","batches");
x.t("update","batch");
}
