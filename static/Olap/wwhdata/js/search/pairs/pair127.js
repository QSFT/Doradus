function FileData_Pairs(x)
{
x.t("example","response");
x.t("example","pair=sender");
x.t("example","aggregate");
x.t("example","metric");
x.t("min","(size)");
x.t("equal","shard-from");
x.t("searching","shards");
x.t("specialists","/field");
x.t("parameter","example");
x.t("parameter","description");
x.t("parameter","provided");
x.t("parameter","ignored");
x.t("parameter","omitted");
x.t("parameter","above");
x.t("parameter","either");
x.t("below","example");
x.t("q=size","10000");
x.t("926","/metric");
x.t("926","field");
x.t("day","2010-01-01");
x.t("defines","objects");
x.t("defines","range");
x.t("defines","two");
x.t("role","queries");
x.t(".isinternal","false");
x.t("/metric","field");
x.t("table","{params}");
x.t("description","example");
x.t("(senddate)","m=count");
x.t("dql","query");
x.t("divide","computations");
x.t("required","starting");
x.t("required","comma-separated");
x.t("range=","shard-from");
x.t("xshards=","shards");
x.t("xlink","searching");
x.t("xlink","search");
x.t("summary","1254");
x.t("name=","sender.person.department");
x.t("epressions","text");
x.t("searched","aggregate");
x.t("searched","either");
x.t("searched","ending");
x.t("referenced","xlinks");
x.t("/totalgroups","groups");
x.t("pair","parameter");
x.t("pair","list");
x.t("range=2013","2013");
x.t("field","name=");
x.t("field","sender.person.department");
x.t("provided","range");
x.t("provided","shards");
x.t("provided","examples");
x.t("provided","corresponding");
x.t("shards=2010-01-01","shards=13q1,13q2,13q2");
x.t("metric=","count");
x.t("/totalobjects","summary");
x.t("2010-01-01","2011-12-31");
x.t("q=all","(internalrecipients.person.domain)");
x.t("externalrecipients.messageaddress.domain.name","pair=");
x.t("response","xml");
x.t("m=distinct","(name)");
x.t("value/metric","expression");
x.t("sender.person.department","group");
x.t("sender.person.department","sales");
x.t("sender.person.department","f=batch");
x.t("sender.person.department","/field");
x.t("sender.person.department","(null)");
x.t("sender.person.department","totalobjects");
x.t("sender.person.department","&range=2014");
x.t("1254","summary");
x.t("1254","/totalobjects");
x.t("1254","totalgroups");
x.t("1254","/summary");
x.t("count","metric");
x.t("count","(sender.person)");
x.t("count","query");
x.t("count","query=");
x.t("text","(optional)");
x.t("objects","referenced");
x.t("objects","metric");
x.t("objects","selected");
x.t("objects","include");
x.t("objects","optionally");
x.t("(sender.person.lastname)","m=average");
x.t("single","value");
x.t("shards=13q1,13q2,13q2","range=");
x.t("command","{application}");
x.t("datediff","day");
x.t("size","1000,10000,100000");
x.t("size","10000");
x.t("top","externalrecipients.messageaddress.domain.name");
x.t("top","sender.person.department");
x.t("shard-from","name");
x.t("shard-from","shard-to");
x.t("/groups","/results");
x.t("uri","olap");
x.t("uri","aggregate");
x.t("uri","parameters");
x.t("uri","request");
x.t("list","defines");
x.t("list","metric");
x.t("list","shard");
x.t("list","(required)");
x.t("list","(optional)");
x.t("list","grouping");
x.t("2011-12-31","m=max");
x.t("group","value/metric");
x.t("group","top");
x.t("group","metric");
x.t("xlinks","parameter");
x.t("xlinks","aggregate");
x.t("xlinks","ending");
x.t("&m=count","&f=top");
x.t("simple","math");
x.t("results","aggregate");
x.t("false","grouping");
x.t("via","uri");
x.t("olap","rest");
x.t("specified","range");
x.t("specified","shards");
x.t("/email/message/_aggregate","q=size");
x.t("totalgroups","/totalgroups");
x.t("totalgroups","groups");
x.t("name","defines");
x.t("name","xshards=");
x.t("name","searched");
x.t("name","range=2013");
x.t("name","shard");
x.t("name","2013-12-31");
x.t("name","{table}");
x.t("name","omitted");
x.t("name","greater");
x.t("name","optional");
x.t("name","optionally");
x.t("range","parameter");
x.t("range","searched");
x.t("range","shards");
x.t("xshards","parameter");
x.t("pair=sender","internalrecipients");
x.t("aggregate","metric=");
x.t("aggregate","metric");
x.t("aggregate","query");
x.t("m=sum","(size)");
x.t("average","(size)");
x.t("2013-11-01","shard");
x.t("parameters","uri");
x.t("parameters","/email/message/_aggregate");
x.t("parameters","supported");
x.t("parameters","m=count");
x.t("parameters","separated");
x.t("sales","technical");
x.t("constants","simple");
x.t("rest","command");
x.t("rest","commands");
x.t("algebraic","expression");
x.t("search","objects");
x.t("search","scope");
x.t("1000,10000,100000","top");
x.t("fields","used");
x.t("metric","926");
x.t("metric","/metric");
x.t("metric","epressions");
x.t("metric","field");
x.t("metric","count");
x.t("metric","parameters");
x.t("metric","computations");
x.t("metric","expressions");
x.t("metric","expression");
x.t("(size)","min");
x.t("(size)","count");
x.t("(size)","average");
x.t("(size)","m=max");
x.t("&f=top","sender.person.department");
x.t("request","rest");
x.t("selected","objects");
x.t("selected","examples");
x.t("functions","constants");
x.t("shards","parameter");
x.t("shards","required");
x.t("shards","searched");
x.t("shards","range");
x.t("shards","search");
x.t("shards","whose");
x.t("shards","(optional)");
x.t("commands","aggregate");
x.t("supported","metric");
x.t("calculate","selected");
x.t("queries","section");
x.t("operators","parentheses");
x.t("(sender.person)","datediff");
x.t("(sender.person)","m=count");
x.t("computed","across");
x.t("f=batch","size");
x.t("10000","&m=count");
x.t("10000","group");
x.t("10000","group=");
x.t("computations","omitted");
x.t("computations","single-");
x.t("shard","name");
x.t("shard","names");
x.t("2013","shard");
x.t("expressions","divide");
x.t("expressions","calculate");
x.t("m=count","m=distinct");
x.t("m=count","count");
x.t("combination","examples");
x.t("internalrecipients","shards=");
x.t("2013-12-31","range=2013-01-01");
x.t("/field","/group");
x.t("{table}","/_aggregate");
x.t("{table}","perspective");
x.t("starting","shard");
x.t("ignored","xshards");
x.t("ignored","xrange");
x.t("pair=","pair");
x.t("section","pair");
x.t("xml","results");
x.t("omitted","xlink");
x.t("omitted","objects");
x.t("omitted","shards");
x.t("omitted","scope");
x.t("omitted","corresponding");
x.t("grouped","query");
x.t("2013-01-01","shard");
x.t("scope","xlink");
x.t("scope","defined");
x.t("technical","specialists");
x.t("groups","parameter");
x.t("groups","group");
x.t("groups","defined");
x.t("m=max","(sender.person.lastname)");
x.t("m=max","(size)");
x.t("multi-level","groups");
x.t("range=2013-11-01,2013-12-31","2013-11-01");
x.t("(null)","group");
x.t("(null)","/field");
x.t("/_aggregate","{params}");
x.t("/summary","totalgroups");
x.t("(required)","list");
x.t("parentheses","expression");
x.t("whose","name");
x.t("greater","equal");
x.t("totalobjects","1254");
x.t("subdivided","groups");
x.t("(optional)","dql");
x.t("(optional)","list");
x.t("(optional)","starting");
x.t("(optional)","comma-separated");
x.t("{application}","{table}");
x.t("{application}","application");
x.t("include","metric");
x.t("/group","/groups");
x.t("/group","group");
x.t("value","group");
x.t("value","metric");
x.t("xrange","parameter");
x.t("ampersands","following");
x.t("shards=","shards");
x.t("(internalrecipients.person.domain)",".isinternal");
x.t("expression","defines");
x.t("expression","provided");
x.t("expression","list");
x.t("expression","algebraic");
x.t("expression","computed");
x.t("expression","combination");
x.t("expression","consisting");
x.t("computes","single");
x.t("computes","value");
x.t("consisting","functions");
x.t("q=lastname=smith","q=all");
x.t("query","size");
x.t("query","xlinks");
x.t("query","via");
x.t("query","commands");
x.t("query","expression");
x.t("query","computes");
x.t("query","submit");
x.t("query","using");
x.t("dual","role");
x.t("shard-to","required");
x.t("shard-to","name");
x.t("shard-to","(optional)");
x.t("optional","ending");
x.t("group=","top");
x.t("defined","shards");
x.t("defined","grouping");
x.t("examples","below");
x.t("examples","shards=2010-01-01");
x.t("examples","range=2013-11-01,2013-12-31");
x.t("examples","q=lastname=smith");
x.t("examples","f=tags");
x.t("examples","xrange=");
x.t("single-","multi-level");
x.t("submit","parameters");
x.t("{params}","uri");
x.t("{params}","{application}");
x.t("application","name");
x.t("global","query");
x.t("above","examples");
x.t("/results","json");
x.t("perspective","table");
x.t("two","fields");
x.t("json","results");
x.t("optionally","subdivided");
x.t("optionally","ending");
x.t("query=","size");
x.t("separated","ampersands");
x.t("following","parameters");
x.t("corresponding","grouped");
x.t("corresponding","global");
x.t("used","compute");
x.t("compute","special");
x.t("special","dual");
x.t("either","range");
x.t("either","xshards");
x.t("either","shards");
x.t("either","xrange");
x.t("ending","shard");
x.t("ending","shard-to");
x.t("(name)","m=sum");
x.t("using","uri");
x.t("across","selected");
x.t("grouping","parameter");
x.t("grouping","list");
x.t("grouping","expressions");
x.t("names","specified");
x.t("names","search");
x.t("range=2013-01-01","2013-01-01");
x.t("m=average","(senddate)");
x.t("math","operators");
x.t("f=tags","f=top");
x.t("f=top","sender.person.department");
x.t("xrange=","shard-from");
x.t("comma-separated","list");
x.t("&range=2014","example");
}
