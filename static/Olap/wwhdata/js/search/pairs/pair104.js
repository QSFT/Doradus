function FileData_Pairs(x)
{
x.t("example",".../_aggregate");
x.t("included","top");
x.t("parameter","example");
x.t("parameter","format");
x.t("parameter","comma-separated");
x.t("shown","groupset");
x.t("decompose","metric");
x.t("/groupset","/groupsets");
x.t("/groupset","groupset");
x.t("senddate","month");
x.t("16796009","/value");
x.t("16796009","totalgroups");
x.t("16796009","/summary");
x.t("16796009","groupset");
x.t("non-grouped","case");
x.t("summary","16796009");
x.t("summary","6030");
x.t("summary","31615");
x.t("summary","31615.808");
x.t("/groupsets","/results");
x.t("derived","first");
x.t("/totalgroups","groups");
x.t("uses","top");
x.t("uses","grouping");
x.t("field","top");
x.t("field","multi-metric");
x.t("/value","/groupset");
x.t("metric=","count");
x.t("metric=","average");
x.t("metric=","max");
x.t("provided","metric");
x.t("provided","outer");
x.t("mix","metric");
x.t("(2)","grouping");
x.t("response","query");
x.t("response","json");
x.t("multiple","metric");
x.t("however","groupset");
x.t("count","summary");
x.t("count","objects");
x.t("count","group");
x.t("count","metric");
x.t("count","max");
x.t("count","value");
x.t("single","pass");
x.t("objects","maximum");
x.t("element","provides");
x.t("element","identifies");
x.t("element","containing");
x.t("distinct","function");
x.t("size","field");
x.t("top","(2)");
x.t("top","function");
x.t("top","tags");
x.t("top","bottom");
x.t("/groups","/groupset");
x.t("list","metric");
x.t("determines","outer");
x.t("group","top");
x.t("group","levels");
x.t("results","aggregate");
x.t("results","outer");
x.t("results","following");
x.t("olap","aggregate");
x.t("totalgroups","/totalgroups");
x.t("totalgroups","value");
x.t("totalgroups","groupset");
x.t("simplest","case");
x.t("aggregate","metric=");
x.t("aggregate","group");
x.t("aggregate","metric");
x.t("aggregate","queries");
x.t("aggregate","query");
x.t("perform","multiple");
x.t("average","(size)");
x.t("average","values");
x.t("limit","derived");
x.t("provides","function\u2019s");
x.t("inner","outer");
x.t("inner","groups");
x.t("month","metric=");
x.t("month","&shards=");
x.t("month","groupsets");
x.t("month","metric");
x.t("month","groups");
x.t("multi-metric","aggregate");
x.t("multi-metric","queries");
x.t("multi-metric","query");
x.t("metric","parameter");
x.t("metric","count");
x.t("metric","element");
x.t("metric","determines");
x.t("metric","average");
x.t("metric","functions");
x.t("metric","computations");
x.t("metric","function");
x.t("metric","max");
x.t("(size)","summary");
x.t("(size)","group");
x.t("(size)","average");
x.t("(size)","&shards=");
x.t("(size)","groupsets");
x.t("(size)","&f=top");
x.t("(size)","functions");
x.t("(size)","value");
x.t("(size)","group=");
x.t("&shards=","count");
x.t("&shards=","query");
x.t("groupsets","element");
x.t("groupsets","groupset");
x.t("contain","groups");
x.t("&f=top","tags");
x.t("functions","multi-metric");
x.t("functions","returned");
x.t("functions","used");
x.t("6030","/value");
x.t("6030","totalgroups");
x.t("6030","/summary");
x.t("6030","groupset");
x.t("selected","metric");
x.t("queries","olap");
x.t("queries","perform");
x.t("queries","multi-metric");
x.t("queries","metric");
x.t("queries","grouped");
x.t("queries","produce");
x.t("outer","group");
x.t("outer","inner");
x.t("outer","groupsets");
x.t("outer","groups");
x.t("outer","grouping");
x.t("first","metric");
x.t("31615","totalgroups");
x.t("computed","inner");
x.t("computed","value");
x.t("computations","single");
x.t("computations","appropriate");
x.t("max","(size)");
x.t("maximum","average");
x.t("function","non-grouped");
x.t("function","totalgroups");
x.t("function","metric");
x.t("function","outer");
x.t("function","computed");
x.t("function","cannot");
x.t("function","query");
x.t("function","grouping");
x.t("function","performed");
x.t("function\u2019s","value");
x.t("m=count","max");
x.t("cannot","used");
x.t("requests","count");
x.t("format","groupset");
x.t("returned","outer");
x.t("xml","results");
x.t("grouped","multi-metric");
x.t("grouped","queries");
x.t("truncate","senddate");
x.t("identifies","metric");
x.t("groups","example");
x.t("groups","included");
x.t("groups","decompose");
x.t("groups","summary");
x.t("groups","/groups");
x.t("groups","multi-metric");
x.t("groups","selected");
x.t("groups","typical");
x.t("groups","corresponding");
x.t("level","here\u2019s");
x.t("level","used");
x.t("matches","global");
x.t("/summary","totalgroups");
x.t("value","16796009");
x.t("value","provided");
x.t("value","element");
x.t("value","6030");
x.t("value","grouped");
x.t("value","31615.808");
x.t("data","simplest");
x.t("query","uses");
x.t("query","results");
x.t("query","metric");
x.t("query","requests");
x.t("query","above");
x.t("typical","response");
x.t("group=","top");
x.t(".../_aggregate","m=count");
x.t("result","metric");
x.t("appropriate","groups");
x.t("tags","truncate");
x.t("case","uses");
x.t("case","however");
x.t("values","size");
x.t("here\u2019s","response");
x.t("groupset","metric=");
x.t("groupset","provided");
x.t("groupset","metric");
x.t("groupset","contain");
x.t("groupset","matches");
x.t("groupset","group=");
x.t("groupset","result");
x.t("above","xml");
x.t("above","returns");
x.t("/results","outer");
x.t("/results","json");
x.t("global","aggregate");
x.t("31615.808","shown");
x.t("31615.808","/value");
x.t("31615.808","/summary");
x.t("json","results");
x.t("following","results");
x.t("used","top");
x.t("used","multi-metric");
x.t("used","except");
x.t("except","distinct");
x.t("bottom","limit");
x.t("bottom","function");
x.t("corresponding","inner");
x.t("containing","groupset");
x.t("pass","data");
x.t("grouping","parameter");
x.t("grouping","field");
x.t("grouping","count");
x.t("grouping","level");
x.t("returns","results");
x.t("levels","mix");
x.t("performed","groups");
x.t("produce","groupset");
x.t("comma-separated","list");
}
