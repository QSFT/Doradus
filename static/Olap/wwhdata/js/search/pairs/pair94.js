function FileData_Pairs(x)
{
x.t("example","/email/message/_aggregate");
x.t("example","/email/person/_aggregate");
x.t("example","above");
x.t("passed","exclude");
x.t("passed","include");
x.t("parameter","special");
x.t("integers","integer");
x.t("left-to-right","useful");
x.t("shown","example");
x.t("within","names");
x.t("create","groups");
x.t("create","grouping");
x.t("field","example");
x.t("field","integers");
x.t("field","text");
x.t("field","selected");
x.t("field","values");
x.t("field","used");
x.t("variations","excluded");
x.t("variations","sequence");
x.t("variations","values");
x.t("skipped","again");
x.t("type","field");
x.t("text","field");
x.t("text","scalars");
x.t("text","scalar");
x.t("count","top");
x.t("objects","used");
x.t("top","most-used");
x.t("again","grouping");
x.t("group","normally");
x.t("normally","generated");
x.t("normally","values");
x.t("olap","aggregate");
x.t("/email/message/_aggregate","f=tags.exclude");
x.t("/email/message/_aggregate","f=tags");
x.t("eliminate","specific");
x.t("processed","order");
x.t("enclosed","quotes");
x.t("most-used","name");
x.t("name","values");
x.t("aggregate","queries");
x.t("aggregate","query");
x.t("compatible","corresponding");
x.t("boolean","fields");
x.t("useful","include");
x.t("exclude","compatible");
x.t("exclude","functions");
x.t("exclude","confidential");
x.t("exclude","function");
x.t("exclude","(null)");
x.t("exclude","sam");
x.t("exclude","used");
x.t("exclude","names");
x.t("exclude","prune-out");
x.t("selection","owning");
x.t("fields","eliminate");
x.t("fields","booleans");
x.t("fields","additionally");
x.t("contain","wildcards");
x.t("&f=top","name.include");
x.t("functions","shown");
x.t("functions","olap");
x.t("functions","processed");
x.t("functions","aggregate");
x.t("functions","include");
x.t("selected","objects");
x.t("quotes","example");
x.t("quotes","contain");
x.t("scalars","contain");
x.t("begin","aaron");
x.t("queries","grouping");
x.t("confidential","internal");
x.t("long","fields");
x.t("first","select");
x.t("select","overly-broad");
x.t("scalar","type");
x.t("scalar","value");
x.t("scalar","values");
x.t("scalar","grouping");
x.t("function","whole");
x.t("function","used");
x.t("m=count","&f=top");
x.t("internal","groups");
x.t("internal","case");
x.t("internal","grouping");
x.t("wildcards","example");
x.t("wildcards","values");
x.t("match","specific");
x.t("keyword","null");
x.t("(uppercase)","used");
x.t("owning","object");
x.t("case-insensitive","values");
x.t("excluded","values");
x.t("whole","case-insensitive");
x.t("end","sam");
x.t("end","murphy");
x.t("groups","example");
x.t("groups","match");
x.t("groups","end");
x.t("groups","generated");
x.t("groups","matching");
x.t("(null)","group");
x.t("least","object");
x.t("aaron","within");
x.t("aaron",".exclude");
x.t("unwanted","values");
x.t("booleans","boolean");
x.t("null","(uppercase)");
x.t("null","include");
x.t("null","value");
x.t("include","exclude");
x.t("include","confidential");
x.t("include","first");
x.t("include","function");
x.t("include","names");
x.t("value","enclosed");
x.t("value","confidential");
x.t("value","grouping");
x.t("sam","aggregate");
x.t("sam","letter");
x.t("specific","scalar");
x.t("specific","values");
x.t("f=tags.exclude","null");
x.t("/email/person/_aggregate","m=count");
x.t("generate","groups");
x.t("generated","least");
x.t("generated","matching");
x.t("expression","functions");
x.t(".exclude","murphy");
x.t("sequence","generate");
x.t("murphy","&range=0");
x.t("query","normally");
x.t("query","excludes");
x.t("query","returns");
x.t("tags","field");
x.t("affecting","selection");
x.t("values","passed");
x.t("values","skipped");
x.t("values","exclude");
x.t("values","scalar");
x.t("values","include");
x.t("values","tags");
x.t("values","used");
x.t("values","terms");
x.t("values","without");
x.t("case","variations");
x.t("letter","case");
x.t("above","groups");
x.t("excludes","groups");
x.t("integer","long");
x.t("name.include","aaron");
x.t("order","left-to-right");
x.t("special","grouping");
x.t("used","create");
x.t("used","text");
x.t("used","/email/message/_aggregate");
x.t("used","include");
x.t("used","conjunction");
x.t("used","grouping");
x.t("corresponding","scalar");
x.t("additionally","keyword");
x.t("conjunction","grouping");
x.t("grouping","parameter");
x.t("grouping","field");
x.t("grouping","fields");
x.t("grouping","functions");
x.t("grouping","expression");
x.t("grouping","without");
x.t("terms","enclosed");
x.t("returns","count");
x.t("without","affecting");
x.t("&range=0","query");
x.t("names","exclude");
x.t("names","begin");
x.t("names","end");
x.t("f=tags","exclude");
x.t("f=tags","include");
x.t("f=tags","values");
x.t("overly-broad","values");
x.t("object","exclude");
x.t("object","null");
x.t("object","include");
x.t("matching","confidential");
x.t("matching","value");
x.t("prune-out","unwanted");
}
