function FileData_Pairs(x)
{
x.t("(non-unicode)","values");
x.t("included","xml");
x.t("example","base64");
x.t("base64","characters");
x.t("base64","encoding");
x.t("converted","respectively");
x.t("every","value");
x.t("every","object");
x.t("uris","characters");
x.t("uris","ids");
x.t("immutable","stored");
x.t("table","different");
x.t("binary","(non-unicode)");
x.t("always","escaped");
x.t("user","applications");
x.t("field","called");
x.t("field","object");
x.t("text","strings");
x.t("convert","unicode");
x.t("objects","table");
x.t("objects","added");
x.t("single","object");
x.t("doradus","messages");
x.t("doradus","ids");
x.t("need","escaped");
x.t("add","treated");
x.t("treated","update");
x.t("behave","follows");
x.t("olap","data");
x.t("stored","system-defined");
x.t("system-defined","field");
x.t("follows","ids");
x.t("_id","field");
x.t("_id","object");
x.t("escaped","example");
x.t("escaped","needed");
x.t("strings","binary");
x.t("string","e.g");
x.t("characters","converted");
x.t("characters","may");
x.t("lengths","long");
x.t("respectively","uris");
x.t("long","every");
x.t("messages","uris");
x.t("messages","always");
x.t("length","objects");
x.t("unique","immutable");
x.t("unique","user");
x.t("unique","values");
x.t("different","lengths");
x.t("unicode","text");
x.t("unicode","string");
x.t("may","need");
x.t("application\u2019s","responsibility");
x.t("responsibility","generate");
x.t("xml","json");
x.t("returned","doradus");
x.t("added","merged");
x.t("ids","included");
x.t("ids","every");
x.t("ids","behave");
x.t("ids","olap");
x.t("ids","unicode");
x.t("ids","returned");
x.t("ids","variable");
x.t("ids","object");
x.t("variable","length");
x.t("e.g","using");
x.t("existing","object");
x.t("value","unique");
x.t("generate","unique");
x.t("data","model");
x.t("values","user");
x.t("values","two");
x.t("called","_id");
x.t("two","objects");
x.t("json","messages");
x.t("applications","convert");
x.t("applications","object\u2019s");
x.t("object\u2019s","assigning");
x.t("created","application\u2019s");
x.t("model","object");
x.t("hex","base64");
x.t("using","hex");
x.t("assigning","_id");
x.t("merged","single");
x.t("object","doradus");
x.t("object","add");
x.t("object","unique");
x.t("object","ids");
x.t("object","created");
x.t("update","existing");
x.t("encoding","ids");
}
