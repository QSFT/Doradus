function FileData_Pairs(x)
{
x.t("example","/email/message/_aggregate");
x.t("example","suppose");
x.t("example","connecting");
x.t("example","shard");
x.t("example","above");
x.t("supports","cross-shard");
x.t("root","message\u2019s");
x.t("root","message");
x.t("exist","foreign");
x.t("exist","means");
x.t("below","table");
x.t("possible","requires");
x.t("parameter","objects");
x.t("parameter","perspective");
x.t("efficiently","olap");
x.t("/fields","/table");
x.t("defines","threadid");
x.t("shown","below");
x.t("every","root");
x.t("resides","shard");
x.t("anywhere","regular");
x.t("replies","forwards");
x.t("sufficient","cases");
x.t("table","name=");
x.t("table","_id");
x.t("refer","multiple");
x.t("deleting","objects");
x.t("=2014-01-01","xrange");
x.t("=2014-01-01","&f=");
x.t("related","xlink");
x.t("related","objects");
x.t("related","relationship");
x.t("related","via");
x.t("key","related");
x.t("normal","practice");
x.t("normal","links");
x.t("person.department","response");
x.t("xlink","example");
x.t("xlink","refer");
x.t("xlink","xlink");
x.t("xlink","responses");
x.t("xlink","text");
x.t("xlink","xlinks");
x.t("xlink","table=");
x.t("xlink","_id");
x.t("xlink","inreplyto");
x.t("xlink","identifies");
x.t("xlink","whose");
x.t("xlink","null");
x.t("regular","links");
x.t("foreign","key");
x.t("foreign","objects");
x.t("foreign","keys");
x.t("name=","responses");
x.t("name=","threadid");
x.t("name=","inreplyto");
x.t("name=","message");
x.t("don\u2019t","want");
x.t("don\u2019t","need");
x.t("creates","inverse");
x.t("tables","xlink");
x.t("tables","xlink\u2019s");
x.t("searched","root");
x.t("searched","objects");
x.t("person.manager","cannot");
x.t("person.manager","given");
x.t("field","normal");
x.t("field","name=");
x.t("field","foreign");
x.t("field","xlink");
x.t("field","type");
x.t("field","responses");
x.t("field","doesn\u2019t");
x.t("field","explicitly");
x.t("field","threadid");
x.t("field","text");
x.t("field","junction");
x.t("field","thereby");
x.t("field","means");
x.t("field","inverse");
x.t("field","assigned");
x.t("field","whose");
x.t("field","value");
x.t("field","belonging");
x.t("field","object");
x.t("pair","xlinks");
x.t("traverse","message.responses");
x.t("traverse","message.inreplyto");
x.t("uses","_id");
x.t("uses","time-oriented");
x.t("declared","used");
x.t("cross-shard","field");
x.t("cross-shard","relationships");
x.t("modified","hence");
x.t("likewise","two");
x.t("sender","person.department");
x.t("fact","setting");
x.t("type","called");
x.t("responses","uses");
x.t("responses","searches");
x.t("responses","inreplyto");
x.t("responses","section");
x.t("responses","message");
x.t("responses","junction=");
x.t("responses","type=");
x.t("responses","work");
x.t("responses",".sender.person.department");
x.t("older","shards");
x.t("older","messages");
x.t("altering","junction");
x.t("aging","traversing");
x.t("doesn\u2019t","match");
x.t("(dql)","details");
x.t("explicitly","assigned");
x.t("explicitly","defined");
x.t("initially","member");
x.t("hence","don\u2019t");
x.t("hence","referential");
x.t("response","shard");
x.t("multiple","objects");
x.t("multiple","shards");
x.t("however","xlinks");
x.t("however","sometimes");
x.t("form","soft");
x.t("threadid","root");
x.t("threadid","xlink");
x.t("threadid","field");
x.t("threadid","searches");
x.t("threadid","junction");
x.t("threadid","_id");
x.t("threadid","identifies");
x.t("threadid","matches");
x.t("threadid","newer");
x.t("threadid","type=");
x.t("text","field");
x.t("back","root");
x.t("relate","objects");
x.t("doradus","olap");
x.t("doradus","takes");
x.t("doradus","query");
x.t("objects","related");
x.t("objects","tables");
x.t("objects","reside");
x.t("objects","searches");
x.t("objects","acts");
x.t("objects","shard");
x.t("objects","may");
x.t("objects","message");
x.t("objects","given");
x.t("objects","object");
x.t("objects","matching");
x.t("link","person.manager");
x.t("link","path");
x.t("link","inreplyto");
x.t("link","paths");
x.t("want","track");
x.t("want","add");
x.t("want","treat");
x.t("want","modify");
x.t("relationship","however");
x.t("relationship","_id");
x.t("relationship","may");
x.t("relationship","least");
x.t("new","shards");
x.t("new","message");
x.t("new","conversation");
x.t("differences","declared");
x.t("details","query");
x.t("need","duplicated");
x.t("need","merge");
x.t("reside","shard");
x.t("reside","and/or");
x.t("soft","relationships");
x.t("xlinks","example");
x.t("xlinks","cross-shard");
x.t("xlinks","explicitly");
x.t("xlinks","form");
x.t("xlinks","relate");
x.t("xlinks","doradus");
x.t("xlinks","relationship");
x.t("xlinks","olap");
x.t("xlinks","inreplyto");
x.t("xlinks","queries");
x.t("xlinks","similar");
x.t("xlinks","defined");
x.t("xlinks","used");
x.t("xlinks","belong");
x.t("complete","graph");
x.t("track","messages");
x.t("add","scalar");
x.t("add","data");
x.t("table=","message");
x.t("message\u2019s","threadid");
x.t("message\u2019s","_id");
x.t("message.responses","navigate");
x.t("referential","integrity");
x.t("navigate","root");
x.t("navigate","message");
x.t("olap","supports");
x.t("olap","searches");
x.t("olap","stores");
x.t("olap","database");
x.t("olap","data");
x.t("olap","links");
x.t("via","foreign");
x.t("via","responses");
x.t("via","xlinks");
x.t("via","inreplyto");
x.t("requires","extra");
x.t("defaults","_id");
x.t("/email/message/_aggregate","m=count");
x.t("counts","messages");
x.t("path","evaluation");
x.t("definition","xlink");
x.t("range","parameter");
x.t("xshards","xrange");
x.t("junction","field");
x.t("junction","fields");
x.t("searches","shards");
x.t("searches","messages");
x.t("searches","message");
x.t("part","thread");
x.t("aggregate","queries");
x.t("aggregate","grouping");
x.t("_id","root");
x.t("_id","/fields");
x.t("_id","every");
x.t("_id","field");
x.t("_id","xlinks");
x.t("_id","junction");
x.t("_id","matches");
x.t("_id","consideration");
x.t("_id","even");
x.t("&q=_id=xyz","shards");
x.t("parameters","using");
x.t("slower","regular");
x.t("worthwhile","same-shard");
x.t("fast","however");
x.t("allows","link");
x.t("inreplyto","defines");
x.t("inreplyto","responses");
x.t("inreplyto","inverses");
x.t("inreplyto","message");
x.t("inreplyto","junction=");
x.t("inreplyto","type=");
x.t("inreplyto","similarly");
x.t("fields","field");
x.t("fields","definition");
x.t("thereby","allowing");
x.t("integrity","assured");
x.t("compactly","duplication");
x.t("thread","shown");
x.t("thread","replies");
x.t("thread","threadid");
x.t("thread","new");
x.t("thread","doradus");
x.t("thread","messages");
x.t("thread","may");
x.t("thread","query");
x.t("thread","used");
x.t("thread","including");
x.t("thread","rooted");
x.t("extra","merging");
x.t("metric","expressions");
x.t("shards","example");
x.t("shards","possible");
x.t("shards","=2014-01-01");
x.t("shards","range");
x.t("shards","shard");
x.t("shards","scenarios");
x.t("shards","whose");
x.t("shards","named");
x.t("shards","although");
x.t("shards","defined");
x.t("shards","merged");
x.t("shards","generally");
x.t("allowing","xlink");
x.t("allowing","queries");
x.t("queries","xlinks");
x.t("queries","slower");
x.t("queries","work");
x.t("sometimes","object");
x.t("point","related");
x.t("suppose","want");
x.t("/table","xlinks");
x.t("acts","xlink");
x.t("means","objects");
x.t("means","object");
x.t("messages","older");
x.t("messages","thread");
x.t("messages","shards");
x.t("messages","conversation");
x.t("messages","created");
x.t("connecting","objects");
x.t("allowed","even");
x.t("message.inreplyto","navigate");
x.t("shard","traverse");
x.t("shard","fact");
x.t("shard","aging");
x.t("shard","link");
x.t("shard","complete");
x.t("shard","add");
x.t("shard","xlinks");
x.t("shard","merging");
x.t("shard","already");
x.t("shard","2014-01-01");
x.t("scalar","field");
x.t("time-oriented","shards");
x.t("cannot","reference");
x.t("may","exist");
x.t("may","sufficient");
x.t("may","want");
x.t("may","need");
x.t("may","reside");
x.t("may","may");
x.t("may","broken");
x.t("duplicated","multiple");
x.t("different","tables");
x.t("expressions","doradus");
x.t("expressions","aggregate");
x.t("expressions","metric");
x.t("m=count","&q=_id=xyz");
x.t("inverse","xlink");
x.t("inverse","link");
x.t("inverse","object");
x.t("stores","data");
x.t("begins","new");
x.t("language","(dql)");
x.t("match","foreign");
x.t("section","doradus");
x.t("assigned","value");
x.t("assigned","relationships");
x.t("simply","setting");
x.t("xlink\u2019s","junction");
x.t("grouped","sender");
x.t("reference","objects");
x.t("reference","object");
x.t("scenarios","may");
x.t("inverses","forming");
x.t("inverses","although");
x.t("identifies","junction");
x.t("identifies","messages");
x.t("given","relationship");
x.t("given","value");
x.t("given","object");
x.t("same-shard","link");
x.t("schema","inverses");
x.t("formed","via");
x.t("formed","simply");
x.t("message","resides");
x.t("message","modified");
x.t("message","initially");
x.t("message","back");
x.t("message","fields");
x.t("message","thread");
x.t("message","shards");
x.t("message","messages");
x.t("message","begins");
x.t("message","(s)");
x.t("message","_id=xyz");
x.t("message","inverse=");
x.t("message","case");
x.t("message","created");
x.t("message","general");
x.t("message","matching");
x.t("message","threads");
x.t("matches","threadid");
x.t("matches","junction");
x.t("matches","_id");
x.t("merging","example");
x.t("merging","olap");
x.t("database","uses");
x.t("newer","messages");
x.t("least","xlink");
x.t("broken","altering");
x.t("span","shards");
x.t("forming","bi-directional");
x.t("whose","threadid");
x.t("whose","junction");
x.t("whose","_id");
x.t("whose","values");
x.t("greater","searched");
x.t("extremely","fast");
x.t("conversation","thread");
x.t("and/or","shards");
x.t("junction=","threadid");
x.t("junction=","_id");
x.t("null","aggregate");
x.t("keys","called");
x.t("value","deleting");
x.t("value","likewise");
x.t("value","may");
x.t("value","across");
x.t("similar","regular");
x.t("xrange","parameter");
x.t("xrange","=2014-01-01");
x.t("named","2014-01-01");
x.t("already","exist");
x.t("consequently","used");
x.t("type=","xlink");
x.t("type=","text");
x.t("2014-01-01","searched");
x.t("2014-01-01","greater");
x.t("evaluation","extremely");
x.t("takes","root");
x.t("takes","message\u2019s");
x.t("although","xlinks");
x.t("(s)","whose");
x.t("_id=xyz","grouped");
x.t("inverse=","responses");
x.t("inverse=","inreplyto");
x.t("belonging","table");
x.t("&f=","responses");
x.t("data","older");
x.t("data","new");
x.t("data","compactly");
x.t("data","model");
x.t("graph","allowing");
x.t("query","counts");
x.t("query","parameters");
x.t("query","expressions");
x.t("query","language");
x.t("query","given");
x.t("future","date");
x.t("defined","defaults");
x.t("defined","xshards");
x.t("defined","shards");
x.t("defined","different");
x.t("defined","schema");
x.t("practice","cases");
x.t("implicitly","creates");
x.t("implicitly","formed");
x.t("treat","object");
x.t("values","point");
x.t("case","doradus");
x.t("called","xlink");
x.t("called","junction");
x.t("above","xlink");
x.t("above","responses");
x.t("above","message");
x.t("date","messages");
x.t("consideration","used");
x.t("two","objects");
x.t("perspective","objects");
x.t("work","efficiently");
x.t("work","_id");
x.t("practical","relationships");
x.t("cases","example");
x.t("cases","normal");
x.t("cases","doradus");
x.t("cases","may");
x.t("duplication","worthwhile");
x.t("duplication","practical");
x.t("created","replies");
x.t("created","part");
x.t("merge","older");
x.t("relationships","hence");
x.t("relationships","xlinks");
x.t("relationships","allows");
x.t("relationships","span");
x.t("relationships","implicitly");
x.t("model","cross-shard");
x.t("links","pair");
x.t("links","differences");
x.t("links","reference");
x.t("links","feasible");
x.t("links","consequently");
x.t("links","used");
x.t("used","example");
x.t("used","anywhere");
x.t("used","thread");
x.t("used","inverse");
x.t("used","query");
x.t("used","cases");
x.t("traversing","xlink");
x.t("setting","person.manager");
x.t("setting","threadid");
x.t("bi-directional","relationship");
x.t("similarly","traverse");
x.t("general","xlinks");
x.t(".sender.person.department","&range=0");
x.t("using","xlinks");
x.t("across","shards");
x.t("assured","junction");
x.t("grouping","expressions");
x.t("forwards","message");
x.t("forwards","sent");
x.t("paths","cases");
x.t("member","thread");
x.t("merged","don\u2019t");
x.t("modify","data");
x.t("&range=0","query");
x.t("including","root");
x.t("rooted","message");
x.t("sent","future");
x.t("even","root");
x.t("even","xlinks");
x.t("object","related");
x.t("object","allowed");
x.t("object","shard");
x.t("object","implicitly");
x.t("object","duplication");
x.t("object","relationships");
x.t("matching","_id");
x.t("matching","value");
x.t("generally","want");
x.t("threads","formed");
x.t("belong","message");
}
