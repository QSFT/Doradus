function FileData_Pairs(x)
{
x.t("mime","type");
x.t("mime","types");
x.t("parameter","mime");
x.t("provide","credentials");
x.t("version","command");
x.t("describes","mime");
x.t("currently","x-api-version");
x.t("required","e.g");
x.t("charset","parameter");
x.t("content-encoding","specifies");
x.t("content-encoding","gzip");
x.t("(response)","entity");
x.t("later","header");
x.t("provided","defaults");
x.t("mode","command");
x.t("type","input");
x.t("type","output");
x.t("type","text/xml");
x.t("calls","require");
x.t("response","includes");
x.t("require","extra");
x.t("default","application/json");
x.t("doradus","content-type");
x.t("doradus","operating");
x.t("doradus","compresses");
x.t("doradus","text/xml");
x.t("x-api-version","supported");
x.t("x-api-version","requests");
x.t("doradus.yaml","file");
x.t("includes","header");
x.t("command","currently");
x.t("command","directed");
x.t("http","headers");
x.t("file","accept");
x.t("indicates","desired");
x.t("api","version");
x.t("api","overview");
x.t("content-type","describes");
x.t("credentials","required");
x.t("overview","common");
x.t("olap","rest");
x.t("desired","mime");
x.t("defaults","input");
x.t("common","rest");
x.t("common","headers");
x.t("operation","described");
x.t("bytes","input");
x.t("rest","calls");
x.t("rest","api");
x.t("rest","commands");
x.t("rest","headers");
x.t("extra","http");
x.t("input","entity\u2019s");
x.t("input","entity");
x.t("commands","rest");
x.t("supported","doradus");
x.t("supported","authorization");
x.t("supported","accept-encoding");
x.t("headers","olap");
x.t("headers","common");
x.t("headers","rest");
x.t("headers","used");
x.t("accept","indicates");
x.t("accept","header");
x.t("entity\u2019s","mime");
x.t("length","input");
x.t("multi-tenant","mode");
x.t("multi-tenant","operation");
x.t("tenant","multi-tenant");
x.t("cannot","longer");
x.t("specifies","input");
x.t("requests","specific");
x.t("requests","output");
x.t("types","supported");
x.t("compressed","content-encoding");
x.t("compressed","accept-encoding");
x.t("identifies","length");
x.t("header","provided");
x.t("header","content\u2011encoding");
x.t("header","used");
x.t("header","names");
x.t("authorization","header");
x.t("operating","multi-tenant");
x.t("content-length","identifies");
x.t("e.g","doradus");
x.t("longer","max_request_size");
x.t("content\u2011encoding","gzip");
x.t("accept-encoding","requests");
x.t("accept-encoding","gzip");
x.t("specific","api");
x.t("specific","tenant");
x.t("output","(response)");
x.t("output","entity");
x.t("gzip","x-api-version");
x.t("gzip","supported");
x.t("defined","doradus.yaml");
x.t("compresses","output");
x.t("values","case-insensitive");
x.t("text/xml","default");
x.t("text/xml","input");
x.t("described","later");
x.t("optionally","charset");
x.t("max_request_size","defined");
x.t("used","provide");
x.t("used","doradus");
x.t("entity","content-encoding");
x.t("entity","response");
x.t("entity","bytes");
x.t("entity","accept");
x.t("entity","cannot");
x.t("entity","compressed");
x.t("entity","optionally");
x.t("application/json","content-length");
x.t("directed","specific");
x.t("names","values");
}
