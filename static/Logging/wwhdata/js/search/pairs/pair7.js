function FileData_Pairs(x)
{
x.t("unlike","storage");
x.t("yyyy-mm-dd","hh:mm:ss.fff");
x.t("yyyy-mm-dd","date");
x.t("example","value");
x.t("14:01:00.000","multiple");
x.t("constitutes","object");
x.t("managing","objects");
x.t("within","fields");
x.t("every","object");
x.t("table","different");
x.t("table","object");
x.t("currently","supported");
x.t("related","stack");
x.t("required","every");
x.t("once","added");
x.t("user","application-defined");
x.t("field","called");
x.t("modified","once");
x.t("addressable","member");
x.t("trace","following");
x.t("timestamps","considered");
x.t("time","time");
x.t("time","fff");
x.t("time","elements");
x.t("multiple","objects");
x.t("multiple","records");
x.t("identifiable","unless");
x.t("default","zero");
x.t("objects","table");
x.t("objects","fields");
x.t("objects","separately");
x.t("objects","cannot");
x.t("objects","assigned");
x.t("objects","added");
x.t("objects","considered");
x.t("objects","object");
x.t("single","time-stamped");
x.t("single","object");
x.t("link","fields");
x.t("new","objects");
x.t("14:01","2015-09-03");
x.t("unless","assigned");
x.t("simple","scalar");
x.t("flat","consist");
x.t("utc","values");
x.t("stored","within");
x.t("operation","supported");
x.t("corresponds","single");
x.t("logging","objects");
x.t("logging","data");
x.t("logging","service");
x.t("zero","example");
x.t("makes","sense");
x.t("time-stamped","log");
x.t("records","single");
x.t("stack","trace");
x.t("fff","fractional");
x.t("fields","constitutes");
x.t("fields","currently");
x.t("fields","addressable");
x.t("fields","objects");
x.t("fields","logging");
x.t("fields","fields");
x.t("fields","scalars");
x.t("fields","predefined");
x.t("record","related");
x.t("record","event");
x.t("store","multiple");
x.t("scalars","logging");
x.t("error","log");
x.t("separately","identifiable");
x.t("supported","logging");
x.t("supported","immutability");
x.t("right-to-left","omitted");
x.t("2015-09-03","14:01:00.000");
x.t("2015-09-03","14:01");
x.t("scalar","link");
x.t("scalar","values");
x.t("unique","timestamp");
x.t("different","fields");
x.t("cannot","modified");
x.t("hh:mm:ss","time");
x.t("format","yyyy-mm-dd");
x.t("multi-valued","scalar");
x.t("assigned","field");
x.t("assigned","unique");
x.t("assigned","timestamp");
x.t("assigned","dynamically");
x.t("omitted","elements");
x.t("added","objects");
x.t("added","update");
x.t("given","format");
x.t("schema","assigned");
x.t("whose","values");
x.t("event","transaction");
x.t("immutability","objects");
x.t("rules","used");
x.t("value","2015-09-03");
x.t("value","timestamp");
x.t("application-defined","generally");
x.t("services","logging");
x.t("considered","flat");
x.t("considered","utc");
x.t("dynamic","fields");
x.t("data","model");
x.t("optional","right-to-left");
x.t("values","stored");
x.t("values","multi-valued");
x.t("values","given");
x.t("hh:mm:ss.fff","yyyy-mm-dd");
x.t("called","timestamp");
x.t("transaction","entity");
x.t("sense","store");
x.t("date","hh:mm:ss");
x.t("predefined","schema");
x.t("cases","makes");
x.t("fractional","time");
x.t("timestamp","required");
x.t("timestamp","timestamps");
x.t("timestamp","assigned");
x.t("timestamp","value");
x.t("timestamp","dynamic");
x.t("model","objects");
x.t("entity","cases");
x.t("following","rules");
x.t("used","logging");
x.t("service","managing");
x.t("service","objects");
x.t("service","adding");
x.t("storage","services");
x.t("individual","objects");
x.t("elements","default");
x.t("elements","optional");
x.t("adding","new");
x.t("member","table");
x.t("log","record");
x.t("object","unlike");
x.t("object","user");
x.t("object","corresponds");
x.t("object","error");
x.t("object","whose");
x.t("object","timestamp");
x.t("object","individual");
x.t("generally","object");
x.t("dynamically","objects");
x.t("consist","simple");
x.t("update","operation");
}
